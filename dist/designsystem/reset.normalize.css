@layer normalize {
  :where(hr) {
    --bg: var(--clr-primary);
    background-color: var(--bg);

    &:is([data-props~=--x]) {
      height: calc(var(--scale-5xs) * 0.1625);
      width: 100%;
    }

    &:is([data-props~=--y]) {
      height: 100%;
      width: calc(var(--scale-5xs) * 0.1625);
    }
  }
}

@layer normalize {
  :where(dl) {
    display: grid;
    gap: var(--scale-sm);
    min-height: 0;
    position: relative;

    & > dt {
      font-size: var(--scale-md);
      font-weight: 500;
    }

    & > dd {
      font-size: var(--scale-md);
      margin-top: calc(var(--scale-sm) * -1);
      padding-left: var(--scale-sm);
    }
  }

  :where(ol, ul) {
    list-style-position: inside;

    & > li {
      font-size: var(--scale-md);
      text-wrap: pretty;
      width: min(72ch, 100%);
    }

    & :where(ol, ul) {
      margin-left: var(--scale-sm);
    }

    &:is(ol) {
      counter-reset: li;

      & li {
        counter-increment: li;

        &::marker {
          content: counter(li)'. ';
        }

        &:is(.__counter) {
          &::marker {
            content: none;
            display: none;
          }
        }
      }

      & .__counter {
        counter-increment: li;
        font-style: normal;
        font-variant-numeric: slashed-zero;

        &::before,
        &::after {
          clear: both;
          display: inline-block;
          margin-inline: 0.5rem;
        }

        &:is([data-props~=--lead])::before {
          content: counter(li)'. ';
        }

        &:is([data-props~=--trail])::after {
          content: ' .' counter(li);
        }
      }
    }

    &:is(ul) {
      & li {
        &::marker {
          clear: both;
          content: '- ';
          display: inline-block;
          margin-inline: 0.5rem;
        }
      }
    }
  }
}

@layer normalize {
  :where(details) {
    display: inline-flex;
    min-height: 0;
    position: relative;
    width: fit-content;

    & > summary {
      & :is([data-props~=--animate]) {
        transition: rotate var(--animDefaults);
      }
    }

    &[open] {
      & > summary {
        & :is([data-props~=--animate]) {
          rotate: -180deg;
        }
      }
    }
  }
}

@layer normalize {
  :where(a, button, summary) {
    --bg: none;
    --clr: inherit;
    --gap: var(--spacing);
    --mx: 0;
    --my: 0;
    --outln: var(--bg);
    --px: var(--spacing);
    --py: 0;
    --radius: 0;
    --spacing: var(--scale-5xs);
    --size: clamp(24pt, 2lh, var(--scale-5xl));

    align-items: center;
    background-color: var(--bg);
    border-radius: var(--radius);
    color: var(--clr);
    cursor: pointer;
    display: inline-flex;
    font-size: var(--scale-md);
    font-weight: 400;
    gap: var(--gap);
    margin: var(--my) var(--mx);
    outline: solid transparent;
    overflow: clip;
    padding: var(--py) var(--px);
    text-overflow: ellipsis;
    transition: background-color var(--animDefaults), color var(--animDefaults),
      outline-color var(--animDefaults);
    white-space: nowrap;
    width: fit-content;

    /* text must be wrapped */
    & > span {
      display: inline-flex;
      color: inherit;
      flex: 1;
      font: inherit;
      overflow: clip;
      text-overflow: ellipsis;
      white-space: nowrap;
    }

    & > figure {
      aspect-ratio: 1/1;
      border-radius: 50%;
      height: calc(100% - var(--spacing));
      width: max-content;
    }

    & > ly-icon {
      --bg: none;
      pointer-events: none;
    }

    /* No icons */
    &:not(:has(:where(:is([data-props~=--lead])):first-child)):not(:has(:where(:is([data-props~=--trail])):last-child)) {
      --px: calc(var(--spacing) * 2.75);
    }

    /* Left icon only */
    &:has(:where(:is([data-props~=--lead])):first-child):is(:not(:has(:where(:is([data-props~=--trail])):last-child))) {
      padding-inline-end: calc(var(--spacing) * 2);
    }

    /* Right icon only */
    &:has(:where(:is([data-props~=--trail])):last-child):is(:not(:has(:where(:is([data-props~=--lead])):first-child))) {
      padding-inline-start: calc(var(--spacing) * 2);
    }

    &[href] {
      --clr: var(--clr-accent);
    }

    &:not(button, :is(a, summary):is([data-props~=--button])) {
      height: max-content;
      padding: 0;
    }

    &:is(button, :is(a, summary):is([data-props~=--button])) {
      --bg: transparent;
      --radius: var(--scale-5xl);
      height: var(--size);
    }

    &:is(button, :is([data-props~=--button])):is([data-props~=--outline]) {
      outline-color: color-mix(in var(--prefers-colorSpace, srgb),
          var(--outln),
          gray 16%);
    }

    &:is(button, :is([data-props~=--button])):is([data-props~=--fab]) {
      --px: 0;
      --py: 0;
      aspect-ratio: 1/1;
      place-content: center;
      width: max-content;
    }

    /* Micro Interactions */
    @media (hover: hover) {
      &:hover {
        background-color: color-mix(in var(--prefers-colorSpace, srgb),
            var(--bg),
            gray 16%);
        color: color-mix(in var(--prefers-colorSpace, srgb),
            var(--clr),
            gray 16%);

        &:is(button, :is([data-props~=--button])):is([data-props~=--outline]) {
          outline-color: color-mix(in var(--prefers-colorSpace, srgb),
              var(--outln),
              gray 16%);
        }
      }
    }

    &:active {
      background-color: color-mix(in var(--prefers-colorSpace, srgb),
          var(--bg),
          darkgray 16%);
      color: color-mix(in var(--prefers-colorSpace, srgb),
          var(--clr),
          darkgray 16%);

      &:is(button, :is([data-props~=--button])):is([data-props~=--outline]) {
        outline-color: color-mix(in var(--prefers-colorSpace, srgb),
            var(--outln),
            darkgray 16%);
      }
    }

    &:focus-visible {
      --outln: var(--clr-accent);
      outline-color: color-mix(in var(--prefers-colorSpace, srgb),
          var(--outln),
          transparent 56%);
    }
  }
}

@layer normalize {
  :where(input, select, textarea) {
    --bg: var(--clr-background);
    --clr: inherit;
    --gap: calc(var(--spacing) * 0.25);
    --mx: 0;
    --my: 0;
    --outln: color-mix(in srgb, var(--bg), darkgray 16%);
    --px: var(--spacing);
    --py: 0;
    --radius: var(--scale-sm);
    --spacing: var(--scale-sm);

    align-items: center;
    background-color: var(--bg);
    border-radius: var(--radius);
    color: var(--clr);
    cursor: pointer;
    font-size: var(--scale-sm);
    font-weight: 400;
    gap: var(--gap);
    margin: var(--my) var(--mx);
    outline: solid var(--outln);
    overflow: clip;
    padding: var(--py) var(--px);
    text-overflow: ellipsis;
    transition: background-color var(--animDefaults), color var(--animDefaults),
      outline-color var(--animDefaults);
    white-space: nowrap;
    width: fit-content;

    /* input, select only */
    &:is(input, select) {
      display: inline-flex;
      height: var(--scale-5xl);
    }

    /* input only */
    &:is(input) {

      &::-webkit-inner-spin-button,
      &::-webkit-outer-spin-button {
        display: none;
      }

      &::-webkit-calendar-picker-indicator {
        cursor: pointer;
        height: 100%;
        inset: 0;
        opacity: 0;
        position: absolute;
        width: 100%;
      }

      &:is([type='color']) {
        appearance: none;
        aspect-ratio: 1/1;
        border-radius: var(--scale-3xs);
        height: auto;
        overflow: hidden;
        padding: 0 !important;
        width: var(--scale-5xl);

        &::-webkit-color-swatch-wrapper {
          padding: 0 !important;
        }

        &::-webkit-color-swatch {
          border: none !important;
        }
      }

      &:is([type='checkbox'], [type='radio']) {
        --bg: transparent;
        --family: 'Material Symbols Outlined',
          'Material Symbols Rounded', 'Material Symbols Sharp', sans-serif;
        --px: 0;
        --py: 0;
        --size: 0.88lh;

        appearance: none;
        aspect-ratio: 1/1;
        background-color: var(--bg);
        display: inline-grid;
        flex-grow: 0;
        flex-shrink: 0;
        font-family: var(--family);
        font-feature-settings: 'liga';
        font-size: var(--size);
        font-variation-settings: 'FILL' var(--fill), 'wght' 400, 'GRAD' 400, 'opsz' 48;
        height: var(--size);
        overflow: clip;
        place-content: center center;
        shape-margin: var(--scale-5xs);
        shape-outside: circle(50%);
        user-select: none;
        vertical-align: middle;
        width: auto;

        &:checked {
          --bg: var(--clr-accent);
        }

        &:is([type='checkbox']:not([data-props~=--switch])) {
          --radius: 25%;
        }

        &:is([type='radio']:not([data-props~=--switch])) {
          --radius: 50%;
        }

        &:is([data-props~=--switch]) {
          --radius: var(--scale-5xl);

          position: relative;
          width: calc(var(--size) * 2);

          &::after {
            aspect-ratio: 1/1;
            background-color: color-mix(in var(--prefers-colorSpace, srgb),
                var(--bg),
                darkgray 16%);
            border-radius: 50%;
            content: '';
            height: calc(var(--size) - 25%);
            inset: 0 calc(var(--prefers-outlineWidth) * 1.75);
            margin-block: auto;
            margin-inline: 0 auto;
            position: absolute;
            transition: margin var(--animDefaults);
            width: auto;
          }

          &:checked {
            --bg: transparent;

            &::after {
              --bg: var(--clr-accent);

              margin-inline: 50% auto;
            }
          }
        }
      }

      &:is([type='file']) {
        display: none;
      }

      &:where(:is([data-props~='--discrete'])) {
        --bg: transparent;
        --px: 0;
        --py: 0;
        --radius: 0;
        height: auto;
        outline: none;
      }
    }

    /* textarea only */
    &:is(textarea) {
      --py: var(--spacing);

      display: block;
      field-sizing: content;
      height: max-content;
      min-height: calc(var(--scale-5xl) * 1.75);
      overflow: auto;
      resize: both;
      text-wrap: pretty;
      width: 100%;
    }

    /* Micro Interactions */
    @media (hover: hover) {
      &:hover {
        outline-color: color-mix(in var(--prefers-colorSpace, srgb),
            var(--outln),
            darkgray 16%) !important;
      }
    }

    &:active {
      outline-color: color-mix(in var(--prefers-colorSpace, srgb),
          var(--outln),
          darkgray 8%) !important;
    }

    &:focus-visible {
      outline-color: color-mix(in var(--prefers-colorSpace, srgb),
          var(--clr-accent),
          transparent 56%) !important;
    }
  }
}

@layer normalize {
  :where(label) {
    --clr: inherit;
    --gap: var(--scale-5xs);

    display: inline-block;
    color: var(--clr);
    font-size: var(--scale-md);
    width: fit-content;

    &:is([data-props~=--field]) {
      display: grid;
      gap: var(--gap);
      grid-template-columns: minmax(0, 1fr);
      width: 100%;

      & > :where(:is([data-props~=--label])) {
        font-size: var(--scale-md);
      }

      & > :where(input, select, textarea) {
        width: 100%;
      }

      & > :where(:is([data-props~=--caption])) {
        color: var(--clr-subtext);
        font-size: var(--scale-sm);
      }
    }
  }
}

@layer normalize {
  :where(nav) {
    display: flex;
    flex-direction: row;
    place-items: center center;
    width: fit-content;

    &:is([data-props~=--tabs]) {
      --bg: inherit;
      --radius: var(--scale-5xl);

      background-color: var(--bg);
      border-radius: var(--radius);
      overflow: clip;

      & > :where(button) {}
    }
  }
}

@layer normalize {
  :where(table) {
    --bg: var(--clr-background);
    --bg--lighter: color-mix(in var(--prefers-colorSpace, srgb),
        var(--bg),
        darkgray 6%);
    --clr: var(--clr-text);
    --gap: 0;
    --radius: 0;
    --spacing: var(--scale-sm);

    background-color: var(--bg);
    border-collapse: collapse;
    display: block;
    overflow-x: auto;
    table-layout: auto;
    white-space: nowrap;
    width: fit-content;

    & caption {
      inset: auto 0 0;
      margin: auto;
      position: absolute;
      translate: 0% 100%;
      width: fit-content;
      z-index: auto;
    }

    & tr {
      border-bottom: solid var(--bg--lighter);

      &:first-child {
        border-top: solid var(--bg--lighter);
      }

      & > th,
      & > td {
        font-size: var(--scale-md);
        font-weight: 400;
        height: var(--scale-5xl);
        line-height: 0;
        min-height: fit-content;
        min-width: max-content;
        overflow: clip;
        padding: calc(var(--spacing) * 0.75) calc(var(--spacing) * 3);
        position: relative;
        text-overflow: ellipsis;
        vertical-align: middle;
        white-space: nowrap;
        width: auto;

        & > * {
          line-height: var(--baseLineHeight);
        }

        & > .marker {
          --bg: none;

          inset: 0 0 0 auto;
          margin: auto 0;
          position: absolute;
        }
      }
    }

    & thead {
      & > tr {
        & > th {
          font-weight: 500;

          &:not(:last-child) {
            border-right: solid var(--bg--lighter);
          }
        }
      }
    }

    & tbody {
      & > tr {
        transition: background-color var(--animDefaults);

        @media (hover: hover) {
          &:hover {
            background-color: color-mix(in var(--prefers-colorSpace, srgb),
                var(--bg),
                darkgray 1%);
          }
        }

        & > td {
          &:not(:last-child) {
            border-right: solid var(--bg--lighter);
          }
        }
      }
    }
  }
}

@layer normalize {
  :where(code) {
    display: inline;
    font-family: monospace;
    text-wrap: nowrap;
    white-space-collapse: preserve;
  }

  :where(pre) {
    border-radius: var(--scale-3xs);
    display: block;
    font-family: monospace;
    overflow-x: auto;
    padding: var(--scale-xl);
    text-wrap: nowrap;
    white-space: pre;
    white-space-collapse: preserve;
  }
}

@layer normalize {
  :where(icon) {
    --family: 'Material Symbols Outlined',
      'Material Symbols Rounded', 'Material Symbols Sharp', sans-serif;
    --fill: 0;
    --size: 1lh;

    aspect-ratio: 1/1;
    display: inline-grid;
    flex-grow: 0;
    flex-shrink: 0;
    font-family: var(--family);
    font-feature-settings: 'liga';
    font-size: var(--size);
    font-variation-settings: 'FILL' var(--fill), 'wght' 400, 'GRAD' 400, 'opsz' 48;
    height: var(--size);
    overflow: clip;
    place-content: center center;
    shape-margin: var(--scale-5xs);
    shape-outside: circle(50%);
    user-select: none;
    width: auto;

    & > * {
      display: contents;
      line-height: 1lh;
      margin: auto;
      vertical-align: -webkit-baseline-middle;
    }

    &:is([data-props~=--solid]) {
      --fill: 1;
    }
  }
}

@layer normalize {
  :where(flex, .flex, group, .group) {
    display: flex;

    &:is([data-props~=--x]) {
      flex-direction: row;
    }

    &:is([data-props~=--y]) {
      flex-direction: column;
    }
  }
}

@layer normalize {
  :where(grid, .grid) {
    --cols: 1;
    --gap: 0px;

    --count: auto-fill;
    --track_min: clamp(6rem, 8rem, 12rem);
    --track_max: 1fr;

    display: grid;
    gap: var(--gap);
    grid-template-columns: repeat(var(--count),
        minmax(max(var(--track_min), 100% / var(--cols) - var(--gap)),
          var(--track_max)));
    width: 100%;

    &:is([data-props~=--2]) {
      --cols: 2;
    }

    &:is([data-props~=--3]) {
      --cols: 3;
    }

    &:is([data-props~=--4]) {
      --cols: 4;
    }

    &:is([data-props~=--5]) {
      --cols: 5;
    }

    &:is([data-props~=--6]) {
      --cols: 6;
    }

    &:is([data-props~=--7]) {
      --cols: 7;
    }

    &:is([data-props~=--8]) {
      --cols: 8;
    }

    &:is([data-props~=--9]) {
      --cols: 9;
    }

    &:is([data-props~=--10]) {
      --cols: 10;
    }

    &:is([data-props~=--11]) {
      --cols: 11;
    }

    &:is([data-props~=--12]) {
      --cols: 12;
    }

    &:is(.container) {
      grid-auto-rows: max-content;
      grid-template-columns:
        [grid-expand-start] minmax(var(--prefers-containerOutterWidth), 1fr) [grid-contain-start] minmax(0, var(--prefers-containerWidth)) [grid-contain-end] minmax(var(--prefers-containerOutterWidth), 1fr) [grid-expand-end];

      & > * {
        grid-column: grid-contain;

        &:is([data-props~=--expand]:not([data-props~=--propagate])) {
          grid-column: grid-expand;
          padding-inline: max(((100% - var(--prefers-containerWidth)) / 2), var(--prefers-containerOutterWidth) + 1px);
        }
      }
    }
  }
}

@layer normalize {
  :where(container, .container) {
    display: grid;
    grid-auto-rows: max-content;
    grid-template-columns:
      [grid-expand-start] minmax(var(--prefers-containerOutterWidth), 1fr) [grid-contain-start] minmax(0, var(--prefers-containerWidth)) [grid-contain-end] minmax(var(--prefers-containerOutterWidth), 1fr) [grid-expand-end];

    & > * {
      grid-column: grid-contain;

      &:is([data-props~=--expand]:not([data-props~=--propagate])) {
        grid-column: grid-expand;
        padding-inline: max(((100% - var(--prefers-containerWidth)) / 2), var(--prefers-containerOutterWidth) + 1px);
      }
    }
  }
}

@layer normalize {
  :where(slider, .slider) {
    display: grid;
    height: max-content;
    /*scroll-snap-padding-block: var(--gap);*/

    & > * {
      min-height: max-content;
      min-width: max-content;
      /*scroll-snap-align: start;*/
    }

    &:is([data-props~=--x]) {
      grid-auto-flow: column;
      grid-auto-columns: max-content;
      overflow-x: auto;
      overflow-y: visible;
      /*scroll-snap-type: x proximity;*/
    }

    &:is([data-props~=--y]) {
      grid-auto-flow: row;
      grid-auto-rows: max-content;
      overflow-x: visible;
      overflow-y: auto;
      /*scroll-snap-type: y proximity;*/
    }
  }
}
/*# sourceMappingURL=data:application/json;base64, */