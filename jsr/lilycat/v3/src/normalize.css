:where(

  /* Headings */
  h1, h2, h3, h4, h5, h6,
  /* Text content */
  p, blockquote, q, cite,
  /* Lists */
  ul, ol, dl, dt, dd, li,
  /* Containers and semantic elements */
  a, div, span, details, summary, figure, figcaption, caption,
  address, main, section, article, aside, header, footer, nav,
  /* Form elements */
  form, fieldset, legend, label, button, input, select, textarea, optgroup, option) {
  font-family: inherit;
  font-weight: 300;
  overflow-wrap: break-word;
  text-overflow: ellipsis;
  word-break: break-word;
}

:where(article, aside, details, figcaption, footer, header, hgroup, menu, section) {
  display: block;
}

:where(hr) {
  background-color: hsl(from var(--clr-surface) h s calc(l + 5));
  flex: 0 0 1px;
  height: 1px;
  width: 100%;
}

:where(mark) {
  background-color: var(--clr-warning);
}

:where(nav) {
  display: flex;
}

:where(audio, canvas, figure, iframe, img, video) {
  display: inline-block;
  width: fit-content;
}

:where(audio) {
  height: 50px;
  width: clamp(250px, 100%, 350px);
}

:where(figure > img) {
  height: 100%;
  width: 100%;
}

:where(img) {
  object-fit: cover;
}

:where(meter, progress) {
  display: inline-block;
  height: 35px;
}

:where(code, pre) {
  display: inline-block;
  overflow-x: auto;
  vertical-align: top;
  white-space: pre;
  word-break: keep-all;
  width: fit-content;
}

:where(code) {
  color: var(--clr-debug);
}

:where(pre) {
  white-space-collapse: preserve-breaks;
}

:where(blockquote) {
  border-left: solid var(--xs, 5px);
  margin: min(5%, var(--sm, 10px));
  padding: min(5%, var(--sm, 10px));
}

:where(caption, figcaption, li, p, span, div) {
  text-wrap: pretty;
}

:where(a, area, button, input, label, select, summary, textarea) {
  -ms-touch-action: manipulation;
  touch-action: manipulation;
}

:where(textarea) {
  width: 100%;
}

:where(ul,
  ol) {
  list-style-position: inside;
  padding-left: 0.5em;
}

:where(ul > li) {
  &::marker {
    content: "â€¢ ";
  }
}

:where(dl) {
  display: block;
}

:where(dt) {
  color: hsl(from var(--clr-content) h s calc(l + 10));
  font-weight: 600;
}

:where(dd) {
  font-weight: 300;
  padding-left: 0.5em;
}

:where(h1, h2, h3, h4, h5, h6) {
  color: hsl(from var(--clr-content) h s calc(l + 10));
  line-height: clamp(100%, 115%, 125%);
  text-wrap: balance;
}

:where(h1) {
  font-size: var(--type-xl, 60px);
}

:where(h2) {
  font-size: var(--type-lg, 50px);
}

:where(h3) {
  font-size: var(--type-nm, 40px);
}

:where(h4) {
  font-size: var(--type-md, 35px);
}

:where(h5) {
  font-size: var(--type-sm, 30px);
}

:where(h6) {
  font-size: var(--type-xs, 25px);
}

:where(p) {
  width: clamp(50ch, 100%, 75ch);
}

:where(a) {
  color: var(--clr-accent);
  cursor: pointer;
  transition: color var(--animDuration) var(--animTiming);
  text-decoration-thickness: from-font;

  &:visited {
    color: hsl(from var(--clr-accent) h calc(s - 30) calc(l - 30));
  }

  &:focus {
    color: currentColor;
    text-decoration: underline;
  }

  @supports selector(:focus-visible) {
    &:focus {
      text-decoration: none;
    }

    &:focus-visible {
      outline: none;
      text-decoration: underline;
    }
  }

  &:hover {
    color: hsl(from var(--clr-accent) h calc(s + 10) calc(l + 5));
  }

  &:active {
    color: hsl(from var(--clr-accent) h calc(s - 5) calc(l - 10));
  }

  &:where(:not([href="#"]), [href="#"], [href="javascript:void(0)"]) {
    text-decoration: none;
  }
}

:where(button, input, select, textarea) {
  background-color: transparent;
  color: var(--clr-content);
  font-size: inherit;
  height: 45px;
  outline: solid 1px var(--clr-content, currentColor);
  outline-offset: -1px;
  overflow: clip;
  padding: var(--md, 15px);
  white-space: nowrap;
  width: fit-content;
}

:where(input) {
  &:is([type="disabled"], [disabled]) {
    cursor: auto;
  }

  &:is([type="color"]) {
    aspect-ratio: 1/1;
    padding: 0;
  }

  &:is([type="checkbox"], [type="radio"]) {
    height: auto;
  }

  &:is([type="radio"]) {
    border-radius: 50%;
  }
}

:where(button, select, [type="button"], [type="submit"], [type="reset"]) {
  cursor: pointer;
}

:where(textarea) {
  -moz-field-sizing: content;
  -webkit-field-sizing: content;
  field-sizing: content;
  height: auto;
  min-height: 75px;
  resize: both;
  white-space: normal;
}

:where(table) {
  display: block;
  border-collapse: collapse;
  border-spacing: 0;
  outline: solid 1px var(--clr-content, currentColor);
  outline-offset: -1px;
  overflow-x: auto;
  table-layout: auto;
  width: fit-content;

  :where(caption) {
    text-align: center;
  }

  :where(th, td) {
    border: solid 1px;
    height: auto;
    max-width: none;
    min-height: 45px;
    min-width: max-content;
    overflow: clip;
    padding: var(--md, 15px);
    vertical-align: baseline;
    white-space: nowrap;
    width: auto;
  }
}