/**
 * Modern Normalize.css
 * Optimized with current CSS best practices
 */

@layer normalize {
  /* 
   * Base typography and text handling
   * Uses :where() for zero-specificity selectors
   * Groups related elements for better maintenance
   */
  :where(

    /* Headings */
    h1, h2, h3, h4, h5, h6,
    /* Text content */
    p, blockquote, q, cite,
    /* Lists */
    ul, ol, dl, dt, dd, li,
    /* Containers and semantic elements */
    a, div, span, details, summary, figure, figcaption, caption,
    address, main, section, article, aside, header, footer, nav,
    /* Form elements */
    form, fieldset, legend, label, button, input, select, textarea, optgroup, option) {
    font-family: inherit;
    font-weight: 300;
    overflow-wrap: break-word;
    text-overflow: ellipsis;
    word-break: break-word;
  }

  /* Define block elements */
  :where(article, aside, details, figcaption, footer, header, hgroup, menu, section) {
    display: block;
  }

  /* Horizontal rule styling */
  hr {
    background-color: color-mix(in srgb, var(--clr-surface), white 5%);
    flex: 0 0 1px;
    height: 1px;
    width: 100%;
  }

  /* Highlighted text */
  mark {
    background-color: var(--clr-warning);
  }

  /* Navigation container */
  nav {
    display: flex;
  }

  /* Media elements */
  :where(audio, canvas, figure, iframe, img, video) {
    display: inline-block;
    width: fit-content;
  }

  /* Audio-specific styles */
  audio {
    height: 50px;
    width: clamp(250px, 100%, 350px);
  }

  /* Nested image in figure */
  figure > img {
    height: 100%;
    width: 100%;
  }

  /* Base image styling */
  img {
    object-fit: cover;
  }

  /* Meter and progress elements */
  :where(meter, progress) {
    display: inline-block;
    height: 35px;
  }

  /* Code and preformatted text */
  :where(code, pre) {
    overflow-x: auto;
    white-space: pre;
    word-break: keep-all;
  }

  code {
    color: var(--clr-debug);
  }

  pre {
    white-space-collapse: preserve-breaks;
  }

  /* Block quotes */
  blockquote {
    border-left: solid var(--xs, 5px);
    margin: min(5%, var(--sm, 10px));
    padding: min(5%, var(--sm, 10px));
  }

  /* Text wrapping for better readability */
  :where(caption, figcaption, li, p, span, div) {
    text-wrap: pretty;
  }

  /* Touch action for interactive elements */
  :where(a, area, button, input, label, select, summary, textarea) {
    touch-action: manipulation;
  }

  /* Textarea base styling */
  textarea {
    width: 100%;
  }

  /* List styling */
  :where(ul, ol) {
    list-style-position: inside;
    padding-left: 0.5em;
  }

  /* Custom bullet styling */
  ul > li::marker {
    content: "â€¢ ";
  }

  /* Definition lists */
  dl {
    display: block;
  }

  dt {
    color: color-mix(in srgb, var(--clr-content), white 10%);
    font-weight: 600;
  }

  dd {
    font-weight: 300;
    padding-left: 0.5em;
  }

  /* Heading styles with modern text balance */
  :where(h1, h2, h3, h4, h5, h6) {
    color: color-mix(in srgb, var(--clr-content), white 10%);
    line-height: clamp(100%, 115%, 125%);
    text-wrap: balance;
  }

  /* Individual heading sizes */
  h1 {
    font-size: var(--type-xl, 60px);
  }

  h2 {
    font-size: var(--type-lg, 50px);
  }

  h3 {
    font-size: var(--type-nm, 40px);
  }

  h4 {
    font-size: var(--type-md, 35px);
  }

  h5 {
    font-size: var(--type-sm, 30px);
  }

  h6 {
    font-size: var(--type-xs, 25px);
  }

  /* Paragraph and list item width for readability */
  :where(li, p) {
    width: clamp(50ch, 100%, 75ch);
  }

  /* Link styling with modern transitions */
  a {
    color: var(--clr-accent);
    cursor: pointer;
    transition: color var(--animDuration) var(--animTiming);
    text-decoration-thickness: from-font;
    text-underline-offset: 3px;
  }

  a:visited {
    color: color-mix(in srgb, var(--clr-accent), black 30%);
  }

  a:focus {
    color: currentColor;
    text-decoration: underline;
  }

  /* Using focus-visible for better accessibility */
  @supports selector(:focus-visible) {
    a:focus {
      text-decoration: none;
    }

    a:focus-visible {
      text-decoration: underline;
    }
  }

  a:hover {
    color: color-mix(in srgb, var(--clr-accent), white 5%);
  }

  a:active {
    color: color-mix(in srgb, var(--clr-accent), black 10%);
  }

  /* Links without underlines */
  a:where(:not([href="#"]), [href="#"], [href="javascript:void(0)"]) {
    text-decoration: none;
  }

  /* Wrapper links */
  a[data-props="--wrapper"] {
    display: contents;
    transition: none;
  }

  /* Form controls */
  :where(button, input, select, textarea) {
    background-color: transparent;
    color: var(--clr-content);
    font-size: inherit;
    height: 45px;
    outline: solid 1px var(--clr-content);
    outline-offset: -1px;
    overflow: clip;
    padding: var(--md, 15px);
    white-space: nowrap;
    width: fit-content;
  }

  /* Clickable form elements */
  :is(button, select, [type="button"], [type="submit"], [type="reset"]) {
    cursor: pointer;
  }

  /* Disabled elements */
  :is([type="disabled"], [disabled]) {
    cursor: auto;
  }

  /* Color input special handling */
  [type="color"] {
    aspect-ratio: 1/1;
    padding: 0;
  }

  /* Checkbox and radio buttons */
  :is([type="checkbox"], [type="radio"]) {
    height: auto;
  }

  /* Radio button shape */
  [type="radio"] {
    border-radius: 50%;
  }

  /* Textarea specific styles */
  textarea {
    field-sizing: content;
    height: auto;
    min-height: 75px;
    resize: both;
    white-space: normal;
  }

  /* Table styling */
  table {
    display: block;
    border-collapse: collapse;
    border-spacing: 0;
    outline: solid 1px;
    outline-offset: -1px;
    overflow-x: auto;
    table-layout: auto;
    width: fit-content;
  }

  caption {
    text-align: center;
  }

  :where(th, td) {
    border: solid 1px;
    height: auto;
    max-width: none;
    min-height: 45px;
    min-width: max-content;
    overflow: clip;
    padding: var(--md, 15px);
    vertical-align: baseline;
    white-space: nowrap;
    width: auto;
  }
}