// Generated by build.ts - DO NOT EDIT
// ESM-compliant module exporting minified CSS as constants

/**
* Provides minified CSS as a string constant.
* @type {string}
* @returns {string} Minified CSS ready for injection
*/
export const tokens: string = `@property --clr-surface{syntax:"<color>";inherits:true;initial-value:#0d0d0d}@property --clr-content{syntax:"<color>";inherits:true;initial-value:#e6e6e6}@property --clr-accent{syntax:"<color>";inherits:true;initial-value:#7963e9}@property --clr-complementary{syntax:"<color>";inherits:true;initial-value:#b7d22d}@property --clr-debug{syntax:"<color>";inherits:true;initial-value:#bf406a}@property --clr-error{syntax:"<color>";inherits:true;initial-value:#bf4040}@property --clr-info{syntax:"<color>";inherits:true;initial-value:#4075bf}@property --clr-success{syntax:"<color>";inherits:true;initial-value:#40bf75}@property --clr-warning{syntax:"<color>";inherits:true;initial-value:#bfaa40}@property --xs{syntax:"<length>";inherits:true;initial-value:5px}@property --sm{syntax:"<length>";inherits:true;initial-value:10px}@property --md{syntax:"<length>";inherits:true;initial-value:15px}@property --nm{syntax:"<length>";inherits:true;initial-value:20px}@property --lg{syntax:"<length>";inherits:true;initial-value:25px}@property --xl{syntax:"<length>";inherits:true;initial-value:30px}@property --type-xs{syntax:"<length>";inherits:true;initial-value:25px}@property --type-sm{syntax:"<length>";inherits:true;initial-value:30px}@property --type-md{syntax:"<length>";inherits:true;initial-value:35px}@property --type-nm{syntax:"<length>";inherits:true;initial-value:40px}@property --type-lg{syntax:"<length>";inherits:true;initial-value:50px}@property --type-xl{syntax:"<length>";inherits:true;initial-value:60px}@property --animDuration{syntax:"<time>";inherits:true;initial-value:325ms}@property --animTiming{syntax:"*";inherits:true;initial-value:cubic-bezier(.45,0,.25,1.35)}`;
/**
* Provides minified CSS as a string constant.
* @type {string}
* @returns {string} Minified CSS ready for injection
*/
export const icons: string = `:is(.icon,.material-symbols-outlined,.material-symbols-rounded,.material-symbols-sharp){--size:var(--type-xs,20px);--fill:0;--grad:0;--opsz:50;--wght:300;aspect-ratio:1/1;contain:content;display:inline-grid;flex:0 0 max-content;font-family:Material Symbols Outlined,Material Symbols Rounded,Material Symbols Sharp,sans-serif;font-feature-settings:"liga";font-size:clamp(100%,100dvw,var(--size));font-size-adjust:from-font;font-style:normal;font-variation-settings:"FILL" var(--fill),"wght" var(--wght),"GRAD" var(--grad),"opsz" var(--opsz);height:var(--size);overflow:clip;place-content:center center;place-items:center center;touch-action:manipulation;transition-behavior:allow-discrete;transition-duration:var(--animDuration);transition-property:color,height,font-size,font-variation-settings,width;transition-timing-function:var(--animTiming);user-select:none;width:var(--size)}:is(.icon,.material-symbols-outlined,.material-symbols-rounded,.material-symbols-sharp)>*{display:contents;vertical-align:-webkit-baseline-middle middle}@media (forced-colors:active){:where(.icon,.material-symbols-outlined,.material-symbols-rounded,.material-symbols-sharp){forced-color-adjust:none}}`;
/**
* Provides minified CSS as a string constant.
* @type {string}
* @returns {string} Minified CSS ready for injection
*/
export const props: string = `:where([data-props~="--wrapper"]){display:contents;isolation:isolate;transition:none}`;
/**
* Provides minified CSS as a string constant.
* @type {string}
* @returns {string} Minified CSS ready for injection
*/
export const reset: string = `:root{accent-color:var(--clr-accent);color-scheme:dark light;-moz-osx-font-smoothing:grayscale;-webkit-font-smoothing:subpixel-antialiased;interpolate-size:allow-keywords;position:relative;text-size-adjust:100%;text-wrap:pretty;vertical-align:baseline}*{backface-visibility:inherit;border:0;box-sizing:border-box;-webkit-font-smoothing:inherit;height:auto;margin:0;max-width:100%;min-block-size:0;min-height:0;min-inline-size:0;outline:none;padding:0;z-index:auto}:after,:before{backface-visibility:inherit;box-sizing:inherit;clear:both}:where(#root,#__next,[data-app-root]){display:contents;isolation:isolate}:where(html){background-color:var(--clr-surface);color:var(--clr-content);display:contents;font-family:sans-serif;font-size:clamp(var(--md),100% + 1rem,var(--nm));font-variant-numeric:tabular-nums;hanging-punctuation:first last;letter-spacing:-.03em;line-height:1.25em;position:static;text-underline-offset:3px}:where(body){background-color:var(--clr-surface);color:var(--clr-content);inset:0;min-height:100dvh;transition-duration:var(--animDuration);transition-property:background-color,color;transition-timing-function:var(--animTiming);width:100dvw;will-change:background-color,color}@media (prefers-reduced-motion:no-preference){:has(:target){scroll-behavior:smooth;scroll-padding-top:1.25em}}@media (forced-colors:active){:root{forced-color-adjust:auto}body,html{background-color:Canvas;color:CanvasText}}@supports selector(:focus-visible){:focus:not(:focus-visible){outline:none}:focus-visible{outline:1px solid var(--clr-accent,currentColor);outline-offset:-1px}}`;
/**
* Provides minified CSS as a string constant.
* @type {string}
* @returns {string} Minified CSS ready for injection
*/
export const normalize: string = `:where(h1,h2,h3,h4,h5,h6,p,blockquote,q,cite,ul,ol,dl,dt,dd,li,a,div,span,details,summary,figure,figcaption,caption,address,main,section,article,aside,header,footer,nav,form,fieldset,legend,label,button,input,select,textarea,optgroup,option){font-family:inherit;font-weight:300;overflow-wrap:break-word;text-overflow:ellipsis;word-break:break-word}:where(article,aside,details,figcaption,footer,header,hgroup,menu,section){display:block}:where(hr){background-color:hsl(from var(--clr-surface) h s calc(l + 5));flex:0 0 1px;height:1px;width:100%}:where(mark){background-color:var(--clr-warning)}:where(nav){display:flex}:where(audio,canvas,figure,iframe,img,video){display:inline-block;width:fit-content}:where(audio){height:50px;width:clamp(250px,100%,350px)}:where(figure>img){height:100%;width:100%}:where(img){object-fit:cover}:where(meter,progress){display:inline-block;height:35px}:where(code,pre){display:inline-block;overflow-x:auto;vertical-align:top;white-space:pre;width:fit-content;word-break:keep-all}:where(code){color:var(--clr-debug)}:where(pre){white-space-collapse:preserve-breaks}:where(blockquote){border-left:solid var(--xs,5px);margin:min(5%,var(--sm,10px));padding:min(5%,var(--sm,10px))}:where(caption,figcaption,li,p,span,div){text-wrap:pretty}:where(a,area,button,input,label,select,summary,textarea){-ms-touch-action:manipulation;touch-action:manipulation}:where(textarea){width:100%}:where(ul,ol){list-style-position:inside;padding-left:.5em}:where(ul>li)::marker{content:"â€¢ "}:where(dl){display:block}:where(dt){color:hsl(from var(--clr-content) h s calc(l + 10));font-weight:600}:where(dd){font-weight:300;padding-left:.5em}:where(h1,h2,h3,h4,h5,h6){color:hsl(from var(--clr-content) h s calc(l + 10));line-height:clamp(100%,115%,125%);text-wrap:balance}:where(h1){font-size:var(--type-xl,60px)}:where(h2){font-size:var(--type-lg,50px)}:where(h3){font-size:var(--type-nm,40px)}:where(h4){font-size:var(--type-md,35px)}:where(h5){font-size:var(--type-sm,30px)}:where(h6){font-size:var(--type-xs,25px)}:where(p){width:clamp(50ch,100%,75ch)}:where(a){color:var(--clr-accent);cursor:pointer;text-decoration-thickness:from-font;transition:color var(--animDuration) var(--animTiming)}:where(a):visited{color:hsl(from var(--clr-accent) h calc(s - 30) calc(l - 30))}:where(a):focus{color:currentColor;text-decoration:underline}@supports selector(:focus-visible){:where(a):focus{text-decoration:none}:where(a):focus-visible{outline:none;text-decoration:underline}}:where(a):hover{color:hsl(from var(--clr-accent) h calc(s + 10) calc(l + 5))}:where(a):active{color:hsl(from var(--clr-accent) h calc(s - 5) calc(l - 10))}:where(a):where(:not([href="#"]),[href="#"],[href="javascript:void(0)"]){text-decoration:none}:where(button,input,select,textarea){background-color:transparent;color:var(--clr-content);font-size:inherit;height:45px;outline:solid 1px var(--clr-content,currentColor);outline-offset:-1px;overflow:clip;padding:var(--md,15px);white-space:nowrap;width:fit-content}:where(input):is([type=disabled],[disabled]){cursor:auto}:where(input):is([type=color]){aspect-ratio:1/1;padding:0}:where(input):is([type=checkbox],[type=radio]){height:auto}:where(input):is([type=radio]){border-radius:50%}:where(input):is([type=range]){--track-height:.5ex;--thumb-size:3ex;--thumb-offset:-1.25ex;--thumb-highlight-size:0px;appearance:none;background:transparent;display:block;inline-size:100%;margin:1ex 0;outline:none;padding:0}:where(input):is([type=range])::-webkit-slider-runnable-track{appearance:none;background-color:var(--clr-content);block-size:var(--track-height);border-radius:5ex;cursor:pointer}:where(input):is([type=range])::-webkit-slider-thumb{appearance:none;background-color:var(--clr-content);block-size:var(--thumb-size);border:5px solid var(--clr-surface);border-radius:50%;cursor:ew-resize;inline-size:var(--thumb-size);margin-top:var(--thumb-offset)}:where(button,select,[type=button],[type=submit],[type=reset]){cursor:pointer}:where(textarea){-moz-field-sizing:content;-webkit-field-sizing:content;field-sizing:content;height:auto;min-height:75px;resize:both;white-space:normal}:where(table){border-collapse:collapse;border-spacing:0;display:block;outline:solid 1px var(--clr-content,currentColor);outline-offset:-1px;overflow-x:auto;table-layout:auto;width:fit-content}:where(table) :where(caption){text-align:center}:where(table) :where(th,td){border:1px solid;height:auto;max-width:none;min-height:45px;min-width:max-content;overflow:clip;padding:var(--md,15px);vertical-align:baseline;white-space:nowrap;width:auto}`;
