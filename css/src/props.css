@layer props {
  :where([data-props~="--background"]) {
    --idle: var(--clr-background);
    --clr: var(--clr-text);

    &:is(button) {
      &:not(:focus, :focus-visible) {
        outline-color: transparent;
      }
    }
  }

  :where([data-props~="--text"]) {
    --idle: var(--clr-text);
    --clr: var(--clr-background);

    &:is(button) {
      &:not(:focus, :focus-visible) {
        outline-color: transparent;
      }
    }
  }

  :where([data-props~="--primary"]) {
    --idle: var(--clr-primary);
    --clr: var(--clr-primary-text);

    &:is(button) {
      &:not(:focus, :focus-visible) {
        outline-color: transparent;
      }
    }
  }

  :where([data-props~="--secondary"]) {
    --idle: var(--clr-secondary);
    --clr: var(--clr-secondary-text);

    &:is(button) {
      &:not(:focus, :focus-visible) {
        outline-color: transparent;
      }
    }
  }

  :where([data-props~="--accent"]) {
    --idle: var(--clr-accent);
    --clr: var(--clr-accent-text);

    &:is(button) {
      &:not(:focus, :focus-visible) {
        outline-color: transparent;
      }
    }
  }

  :where(hr[data-props~="--x"]) {
    height: 1px;
    width: 100%;
  }

  :where(hr[data-props~="--y"]) {
    height: 100%;
    width: 1px;
  }

  :where([data-props~="--input"]) {
    align-items: center;
    background-color: var(--clr-background);
    border-radius: var(--xs);
    display: flex;
    gap: var(--xs);
    height: 45px;
    outline: solid 2px var(--clr-background-10);
    outline-offset: -2px;
    overflow: clip;
    padding: 0 var(--md);
    transition-duration: var(--animDuration);
    transition-property: background-color, color, outline, outline-offset;
    transition-timing-function: var(--animTiming);

    &:has(:focus) {
      outline-color: var(--clr-accent);
    }

    & > input {
      background-color: transparent;
      border-radius: 0;
      height: auto;
      outline: none;
      padding: 0;
      width: 100%;
    }

    & > :where(.icon, button, figure) {
      flex-shrink: 0;
    }

    /* Icon & Figure at the start */
    &:has(> :where(.icon, figure):first-child):not(:has(> :where(.icon, figure):last-child)) {
      padding-left: var(--sm);
    }

    /* Icon & Figure at the end */
    &:has(> :where(.icon, button, figure):last-child):not(:has(> :where(.icon, figure):first-child)) {
      padding-right: var(--sm);
    }

    /* Icons & Figures on both sides */
    &:has(> :where(.icon, figure):first-child):has(> :where(.icon, figure):last-child) {
      padding-left: var(--sm);
      padding-right: var(--sm);
    }

    /* Button at the start */
    &:has(> :where(button):first-child):not(:has(> :where(button):last-child)) {
      padding-left: 0;
    }

    /* Button at the end */
    &:has(> :where(button):last-child):not(:has(> :where(button):first-child)) {
      padding-right: 0;
    }

    /* Button on both sides */
    &:has(> :where(button):first-child):has(> :where(button):last-child) {
      padding-left: 0;
      padding-right: 0;
    }
  }

  :where([data-props~="--circle"]) {
    aspect-ratio: 1/1;
    border-radius: 50%;
    overflow: clip;
  }

  :where([data-props~="--squircle"]) {
    aspect-ratio: 1/1;
    border-radius: 25%;
    overflow: clip;
  }

  :where([data-props~="--segmented-controls"]) {
    background-color: var(--clr-background);
    border-radius: var(--xl);
    gap: calc(var(--xs) / 5);
    height: 45px;
    outline: solid 2px var(--clr-background-10);
    outline-offset: -2px;
    overflow: clip;
    padding: calc(var(--xs) / 2);

    & > button {
      border-radius: inherit;
      flex-shrink: 0;
      max-height: 100%;
      max-width: 100%;
    }
  }

  :where([data-props~="--highlight"]) {
    background-color: transparent;
    isolation: isolate;
    position: relative;

    &::before {
      background-color: var(--clr-background-10);
      border-radius: inherit;
      content: "";
      display: inline-flex;
      height: calc(100% + var(--xs));
      inset: 50%;
      margin: 0;
      opacity: 0;
      position: absolute;
      transition-duration: opacity;
      transition-duration: var(--animDuration);
      transition-timing-function: var(--animTiming);
      translate: -50% -50%;
      width: calc(100% + var(--xs));
      z-index: -1;
    }

    &:hover::before {
      opacity: 1;
    }
  }

  :where([data-props~="--bottomsheet"]) {
    background-color: var(--clr-background);
    border-bottom-left-radius: 0;
    border-bottom-right-radius: 0;
    box-shadow: 0 0 25vmax 25vmax black;
    gap: var(--md);
    height: max-content;
    inset: auto 0 0;
    margin: auto;
    max-height: calc(100% - var(--md));
    outline: solid 2px var(--clr-primary);
    outline-offset: -2px;
    overflow: auto;
    overscroll-behavior: contain;
    padding: 20px var(--md);
    position: fixed;
    width: 100dvw;
    z-index: 20;

    &[open] {
      display: grid;
      grid-auto-rows: max-content;
    }
  }

  :where([data-props~="--fab"]) {
    margin: var(--sm);
    position: fixed;
    z-index: 1;
  }
}