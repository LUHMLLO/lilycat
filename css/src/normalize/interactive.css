@layer normalize {

  :where(a, area, button, [type="button"], input, label, select, summary, textarea) {
    -ms-touch-action: manipulation;
    touch-action: manipulation;
  }

  :where(a, button, select, summary, [type="button"], [type="checkbox"], [type="radio"], [type="reset"], [type="submit"]) {
    cursor: pointer;
  }

  :where(a) {
    align-items: center;
    color: var(--clr-accent__base);
    display: inline-flex;
    gap: var(--xs);
    height: max-content;
    outline: solid 1px transparent;
    outline-offset: 1px;
    text-decoration: underline;
    text-decoration-skip-ink: auto;
    transition-property: color;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    text-decoration-thickness: from-font;
    width: fit-content;

    &:focus-visible {
      outline-color: inherit;
      outline-offset: 0.5px;
    }

    &:hover {
      color: hsl(from var(--clr-accent__raised) h s calc(l + var(--ratio-texts)));
    }

    &:active {
      color: hsl(from var(--clr-accent__lowered) h s calc(l - var(--ratio-texts)));
    }

    &:where(:not([href]), [href=""], [href="#"], [href^="javascript:"], [href^="void(0)"]) {
      color: inherit;
      text-decoration: none;
    }

    &:not([data-roles~="text"]) {
      &:visited:not(:focus-visible, :hover, :active) {
        color: var(--clr-accent__lowered);
      }
    }

    &:where([data-roles~="text"]) {
      color: inherit;
      text-decoration: none;
    }

    & > span {
      flex: 1 1;
    }
  }

  :where(details) {
    display: block;
    overflow: clip;

    &::details-content {
      block-size: 0;
      opacity: 0;
      transition-property: block-size, content-visibility, opacity;
      transition-duration: var(--animDuration);
      transition-timing-function: var(--animTiming);
      transition-behavior: allow-discrete;
    }

    &[open]::details-content {
      block-size: auto;
      opacity: 1;
    }

    :where(summary) {
      &::marker {
        content: none;
      }

      display: flex;

      & > span {
        flex: 1 1;
      }
    }
  }

}