@layer normalize {
  /* general text handling */
  :where(

    /* Headings */
    h1, h2, h3, h4, h5, h6,
    /* Text content */
    p, blockquote, q, cite,
    /* Lists */
    ul, ol, dl, dt, dd, li,
    /* Containers and semantic elements */
    a, div, span, details, summary, figure, figcaption, caption,
    address, main, section, article, aside, header, footer, nav,
    /* Form elements */
    form, fieldset, legend, label, button, input, select, textarea, optgroup, option) {
    font-family: inherit;
    font-weight: 400;
    overflow-wrap: break-word;
    text-overflow: ellipsis;
    text-wrap: pretty;
    word-break: break-word;
  }

  :where(a, button, caption, figcaption, h1, h2, h3, h4, h5, h6, input, label, legend, select, small, summary) {
    text-box: trim-both;
  }

  :where(aside) {
    display: flex;
    flex-direction: column;

    & > * {
      flex-shrink: 0;
    }
  }

  /* general block */
  :where(article, details, figcaption, footer, header, hgroup, menu, section) {
    display: block;
  }

  :where(nav) {
    display: flex;
  }

  :where(hr) {
    background-color: hsl(from var(--clr-background) h s calc(l + var(--ratio-backgrounds)));
    flex: 0 0 1px;
    height: 1px;
    width: 100%;
  }

  :where(mark) {
    background-color: var(--clr-warning);
  }

  /* media */
  :where(audio, canvas, figure, iframe, img, video) {
    display: inline-block;
    width: fit-content;
  }

  :where(audio) {
    height: 50px;
    width: clamp(250px, 100%, 350px);
  }

  :where(figure > img) {
    height: 100%;
    width: 100%;
  }

  :where(img) {
    object-fit: cover;
  }

  /* meter & progress */
  :where(meter, progress) {
    display: inline-block;
    height: 35px;
  }

  /* code and pre wrapping */
  :where(code, pre) {
    display: inline-block;
    overflow-x: auto;
    vertical-align: top;
    white-space: pre;
    word-break: keep-all;
    width: fit-content;
  }

  :where(code) {
    color: var(--clr-debug);
  }

  :where(pre) {
    white-space-collapse: preserve-breaks;
  }

  /* quotes */
  :where(blockquote) {
    border-left: solid var(--xs, 5px);
    margin: min(5%, var(--sm, 10px));
    padding: min(5%, var(--sm, 10px));
  }

  /* general clickable items */
  :where(a, area, button, input, label, select, summary, textarea) {
    -ms-touch-action: manipulation;
    touch-action: manipulation;
  }

  /* organized & unorganized lists */
  :where(ul,
    ol) {
    list-style-position: inside;
    padding-left: 0.5em;
  }

  :where(ul > li) {
    &::marker {
      content: "â€¢ ";
    }
  }

  /* description list */
  :where(dl) {
    display: block;
  }

  :where(dt) {
    color: hsl(from var(--clr-text) h s calc(l + var(--ratio-texts)));
  }

  :where(dd) {
    padding-left: 0.5em;
  }

  /* headings */
  :where(h1, h2, h3, h4, h5, h6) {
    color: hsl(from var(--clr-text) h s calc(l + var(--ratio-texts)));
    font-weight: 500;
    line-height: 1em;
    text-wrap: balance;
  }

  :where(h1) {
    font-size: var(--type-xl, 60px);
  }

  :where(h2) {
    font-size: var(--type-lg, 50px);
  }

  :where(h3) {
    font-size: var(--type-nm, 40px);
  }

  :where(h4) {
    font-size: var(--type-md, 35px);
  }

  :where(h5) {
    font-size: var(--type-sm, 30px);
  }

  :where(h6) {
    font-size: var(--type-xs, 25px);
  }

  :where(p) {
    width: clamp(50ch, 100%, 75ch);
  }

  :where(a, button, select, summary, [type="button"], [type="checkbox"], [type="radio"], [type="reset"], [type="submit"]) {
    cursor: pointer;
  }

  /* links */
  :where(a) {
    align-items: center;
    color: var(--clr-accent);
    display: inline-block;
    gap: var(--xs, 5px);
    height: max-content;
    outline: solid 2px transparent;
    outline-offset: -2px;
    transition-property: color;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    text-decoration-thickness: from-font;
    width: fit-content;

    &:visited:not(:focus-visible, :hover, :active) {
      color: hsl(from var(--clr-accent) h calc(s - 15.618) calc(l - 15.618));
    }

    &:focus-visible {
      outline-color: var(--background);
      outline-offset: 2px;
      text-decoration: underline;
    }

    &:hover {
      color: hsl(from var(--clr-accent) h s calc(l + var(--ratio-texts)));
    }

    &:active {
      color: hsl(from var(--clr-accent) h s calc(l - var(--ratio-texts)));
    }

    &:where(:not([href="#"]), [href="#"], [href="javascript:void(0)"]) {
      text-decoration: none;
    }

    &:where(:not([href])) {
      color: inherit;
    }
  }

  /* buttons */
  :where(button) {
    --background: var(--clr-background);
    --hover: hsl(from var(--background) h s calc(l + var(--ratio-backgrounds)));
    --active: hsl(from var(--background) h s calc(l - var(--ratio-backgrounds)));

    align-items: center;
    background-color: var(--background);
    border-radius: var(--xl, 30px);
    color: var(--clr-text);
    display: inline-flex;
    font-size: inherit;
    gap: var(--xs, 5px);
    height: 45px;

    outline: solid 2px hsl(from var(--background) h s calc(l + var(--ratio-texts)));
    outline-offset: -2px;
    overflow: clip;
    padding: 0 var(--md, 15px);

    transition-property: background-color, color, outline, outline-offset;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);

    white-space: nowrap;
    width: fit-content;

    &:focus-visible {
      outline: solid 3px hsl(from var(--background) h s calc(l + var(--ratio-texts)));
      outline-offset: -2.75px;
    }

    &:hover {
      background-color: var(--hover);
    }

    &:active {
      background-color: var(--active);
    }

    /* Icon at the start */
    &:has(> :where(.icon, figure):first-child):not(:has(> :where(.icon, figure):last-child)) {
      padding-left: var(--sm, 10px);
    }

    /* Icon at the end */
    &:has(> :where(.icon, figure):last-child):not(:has(> :where(.icon, figure):first-child)) {
      padding-right: var(--sm, 10px);
    }

    /* Icons on both sides */
    &:has(> :where(.icon, figure):first-child):has(> :where(.icon, figure):last-child) {
      padding-left: var(--sm, 10px);
      padding-right: var(--sm, 10px);
    }

    &:has(> :where(.icon, figure):only-child) {
      aspect-ratio: 1/1;
      padding: 0;
      place-content: center;
    }
  }

  :where(button[type="disabled"], button[disabled]) {
    background-color: hsl(from color-mix(in hsl, var(--background), hsl(0deg, 0%, 50%) 30%) h s calc(l - var(--ratio-backgrounds)));
    color: hsl(from color-mix(in hsl, var(--background), hsl(0deg, 0%, 95%) 35%) h s calc(l + var(--ratio-texts)));
    filter: contrast(95%);
    isolation: isolate;
  }

  /* inputs */
  :where(input) {
    background-color: var(--clr-background);
    border-radius: var(--xs, 5px);
    color: var(--clr-text);
    display: inline-block;
    font-size: inherit;
    height: 45px;

    outline: solid 2px hsl(from var(--clr-background) h s calc(l + var(--ratio-texts)));
    outline-offset: -2px;
    overflow: clip;
    padding: 0 var(--md, 15px);

    transition-property: background-color, color, outline, outline-offset;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);

    white-space: nowrap;
    width: fit-content;

    &:focus-visible {
      outline-color: var(--clr-accent);
    }

    /* &::placeholder {
  color: hsl(from var(--clr-text) h s calc(l - var(--ratio-texts)));
  mix-blend-mode: color-burn;
} */
  }

  :where(input[type="disabled"], input[disabled]) {
    background-color: hsl(from color-mix(in hsl, var(--clr-background) 90%, hsl(0deg, 0%, 50%)) h s calc(l - var(--ratio-backgrounds)));
    color: hsl(from color-mix(in hsl, var(--clr-text) 10%, hsl(0deg, 0%, 50%)) h s calc(l - var(--ratio-texts)));
    outline-color: transparent;
  }

  :where(input[type="color"]) {
    --size: var(--xl);

    appearance: none;
    aspect-ratio: 1/1;
    height: var(--size);
    padding: 0;
    width: var(--size);

    &::-webkit-color-swatch-wrapper {
      padding: 0;
    }

    &::-webkit-color-swatch {
      border: none;
    }
  }

  :where(input[type="checkbox"], input[type="radio"]) {
    --size: var(--nm, 20px);

    appearance: none;
    aspect-ratio: 1/1;
    background-color: var(--clr-background);
    contain: content;
    display: inline-grid;
    flex: 0 0 max-content;
    height: var(--size);
    padding: 0;
    touch-action: manipulation;
    transition-property: color, height, font-size, width;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    user-select: none;
    vertical-align: text-bottom;
    width: var(--size);

    &:checked {
      background-color: var(--clr-accent);
    }
  }

  :where(input[type="radio"]) {
    border-radius: 50%;
  }

  :where(input[type="range"]) {
    --track-height: .5ex;
    --thumb-size: 3ex;
    --thumb-offset: -1.25ex;

    appearance: none;
    background: transparent;
    display: block;
    inline-size: 100%;
    outline: none;
    padding: 0;

    &::-webkit-slider-runnable-track {
      appearance: none;
      background-color: hsl(from var(--clr-primary) h s calc(l - var(--ratio-backgrounds)));
      block-size: var(--track-height);
      border-radius: 5ex;
      cursor: pointer;
    }

    &::-webkit-slider-thumb {
      appearance: none;
      background-color: var(--clr-primary);
      block-size: var(--thumb-size);
      border: 2px solid var(--clr-background);
      border-radius: 50%;
      cursor: ew-resize;
      inline-size: var(--thumb-size);
      margin-top: var(--thumb-offset);
      transition-property: background-color;
      transition-duration: var(--animDuration);
      transition-timing-function: var(--animTiming);

      &:hover {
        background-color: hsl(from var(--clr-primary) h s calc(l + var(--ratio-backgrounds)));
      }

      &:active {
        background-color: hsl(from var(--clr-primary) h s calc(l - var(--ratio-backgrounds)));
      }
    }
  }

  /* textarea */
  :where(textarea) {
    background-color: var(--clr-background);
    border-radius: var(--xs, 5px);
    color: var(--clr-text);
    display: inline-block;

    -moz-field-sizing: content;
    -webkit-field-sizing: content;
    field-sizing: content;

    font-size: inherit;

    min-height: 75px;

    outline: solid 2px hsl(from var(--clr-background) h s calc(l + var(--ratio-texts)));
    outline-offset: -2px;
    overflow: clip;
    padding: var(--md, 15px);
    resize: both;

    transition-property: background-color, color, outline, outline-offset;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    width: 100%;

    &:focus-visible {
      outline-color: var(--clr-accent);
    }
  }

  /* table */
  :where(table) {
    display: block;
    background-color: var(--clr-background);
    border-collapse: collapse;
    border-spacing: 0;
    outline: solid 2px hsl(from var(--clr-background) h s calc(l + var(--ratio-texts)));
    outline-offset: -2px;
    overflow-x: auto;
    position: relative;
    table-layout: auto;
    width: fit-content;

    :where(caption) {
      background-color: var(--clr-background);
      font-size: inherit;
      overflow: clip;
      padding: var(--sm, 10px);
      text-align: center;
      width: 100%;

      > * {
        vertical-align: middle;
      }
    }

    :where(th) {
      min-height: 100px;
      padding: var(--lg, 25px) var(--xl, 30px) var(--lg, 25px);
    }

    :where(td) {
      min-height: 75px;
      padding: var(--nm, 20px) var(--xl, 30px) var(--lg, 25px);
    }

    :where(th, td) {
      border: solid 1px hsl(from var(--clr-background) h s calc(l + var(--ratio-texts)));
      font: inherit;
      max-width: none;
      min-width: max-content;
      overflow: clip;
      text-align: left;
      vertical-align: baseline;
      white-space: nowrap;
      width: auto;
    }
  }

  /* dialog */
  :where(dialog) {
    background-color: var(--clr-background);
    border-radius: var(--xs, 5px);
    height: max-content;
    inset: 0;
    margin: auto;
    outline: none;
    position: absolute;

    &:modal {
      outline: solid 2px hsl(from var(--clr-background) h s calc(l + var(--ratio-texts)));
      outline-offset: -2px;
    }

    &::backdrop {
      background-color: hsla(from var(--clr-background) h s calc(l - var(--ratio-backgrounds))/25%);
      backdrop-filter: blur(var(--md, 15px));
    }
  }
}