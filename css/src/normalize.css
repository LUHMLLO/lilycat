@layer normalize {

  /* general text */
  :where(h1, h2, h3, h4, h5, h6,
    p, blockquote, q, cite,
    ul, ol, dl, dt, dd, li,
    a, div, span, details, summary, figure, figcaption, caption,
    address, main, section, article, aside, header, footer, nav,
    form, fieldset, legend, label, button, input, select, textarea, optgroup, option) {
    font-family: inherit;
    font-weight: 400;
    overflow-wrap: break-word;
    text-overflow: ellipsis;
    text-wrap: pretty;
    word-break: break-word;
  }

  :where(abbr, acronym, b, big, button, cite, code, del, dfn, em, h1, h2, h3, h4, h5, h6, i, input, ins, kbd, option, q,
    samp, select, small, strong, sub, sup, tt, var) {
    line-height: 1;
  }

  :where(small) {
    font-size: 50%;
  }

  :where(button, input, select, summary) {
    text-box: trim-both;
  }

  :where(aside) {
    display: flex;
    flex-direction: column;

    & > * {
      flex-shrink: 0;
    }
  }

  :where(kbd) {
    background-color: var(--clr-background__raised);
    border-radius: var(--xs);
    display: inline-block;
    font-family: monospace;
    font-size: calc(10 * 0.0625rem);
    height: 25px;
    outline: solid 2px var(--clr-border__raised);
    padding: 0 var(--sm);
    place-content: center;
    white-space: nowrap;
    flex-shrink: 0;
  }

  /* general block */
  :where(article, figcaption, footer, header, hgroup, menu, section) {
    display: block;
  }

  :where(details) {
    display: block;
    overflow: clip;

    &::details-content {
      block-size: 0;
      opacity: 0;
      transition-property: block-size, content-visibility, opacity;
      transition-duration: var(--animDuration);
      transition-timing-function: var(--animTiming);
      transition-behavior: allow-discrete;
    }

    &[open]::details-content {
      block-size: auto;
      opacity: 1;
    }
  }

  :where(summary) {
    display: flex;
    text-align: inherit;

    &::marker {
      content: none;
    }

    & > span {
      flex: 1 1;
      font: inherit;
      overflow: clip;
      text-align: inherit;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  :where(nav) {
    display: flex;
  }

  :where(hr) {
    background-color: var(--clr-border__base);
    flex: 0 0 2px;
    height: 2px;
    width: 100%;
  }

  :where(mark) {
    background-color: var(--clr-warning__base);
  }

  /* media */
  :where(audio, canvas, figure, iframe, img, video) {
    display: inline-block;
    width: fit-content;
  }

  :where(audio) {
    height: 50px;
    width: clamp(250px, 100%, 350px);
  }

  :where(figure > img) {
    display: block;
    height: 100%;
    width: 100%;
  }

  :where(img) {
    object-fit: cover;
  }

  /* meter & progress */
  :where(meter, progress) {
    display: inline-block;
    height: 35px;
  }

  /* code and pre wrapping */
  :where(code, pre) {
    display: inline;
    vertical-align: inherit;
    white-space: pre-wrap;
    word-wrap: break-word;
  }

  :where(code) {
    color: var(--clr-debug__base);
    font-family: monospace;
  }

  :where(pre) {
    font: inherit;
    white-space-collapse: preserve-breaks;
  }

  /* quotes */
  :where(blockquote) {
    border-left: solid var(--xs);
    margin: min(5%, var(--sm));
    padding: min(5%, var(--sm));
  }

  /* general clickable items */
  :where(a, area, button, input, label, select, summary, textarea) {
    -ms-touch-action: manipulation;
    touch-action: manipulation;
  }

  /* organized & unorganized lists */
  :where(menu, ol, ul) {
    display: block;
    list-style-position: inside;
    margin-inline-start: var(--sm);
    margin-trim: block;

    &[role="list"] {
      list-style: none;
    }

    &:is(ul) {
      &:not([role="list"]) {
        li::marker {
          content: none;
        }

        li::before {
          color: inherit;
          content: "* ";
          display: inline-block;
          height: 0.5lh;
          margin-block-start: 0.2lh;
          margin-inline-start: calc(var(--sm) * -1);
          pointer-events: none;
          position: absolute;
          text-align: center;
          user-select: none;
        }
      }
    }

    & > li {
      margin-block: var(--xs);
      position: relative;
    }

    & > :not(li) {
      margin-inline-start: calc(var(--sm) * -1);
    }
  }

  /* description list */
  :where(dl) {
    display: block;
  }

  :where(dt) {
    color: var(--clr-text__raised);
  }

  :where(dd) {
    padding-left: 0.5em;
  }

  /* headings */
  :where(h1, h2, h3, h4, h5, h6) {
    color: var(--clr-text__raised);
    font-weight: 500;
    text-wrap: balance;
  }

  :where(h1) {
    font-size: calc(45 * 0.0625rem);
  }

  :where(h2) {
    font-size: calc(40 * 0.0625rem);
  }

  :where(h3) {
    font-size: calc(30 * 0.0625rem);
  }

  :where(h4) {
    font-size: calc(25 * 0.0625rem);
  }

  :where(h5) {
    font-size: calc(20 * 0.0625rem);
  }

  :where(h6) {
    font-size: calc(15 * 0.0625rem);
  }

  :where(p) {
    width: min(100%, 75ch);
  }

  :where(a, button, select, summary, [type="button"], [type="checkbox"], [type="radio"], [type="reset"], [type="submit"]) {
    cursor: pointer;
  }

  /* :where(label) {} */

  /* links */
  :where(a) {
    align-items: center;
    color: var(--clr-accent__base);
    display: inline-flex;
    gap: var(--xs);
    height: max-content;
    outline: solid 1px transparent;
    outline-offset: 1px;
    text-align: inherit;
    text-decoration: underline;
    text-decoration-skip-ink: auto;
    transition-property: color;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    text-decoration-thickness: from-font;
    width: fit-content;

    &:focus-visible {
      outline-color: inherit;
      outline-offset: 0.5px;
    }

    &:hover {
      color: var(--clr-accent__raised);
    }

    &:active {
      color: var(--clr-accent__lowered);
    }

    &:where(:not([href]), [href=""], [href="#"], [href^="javascript:"], [href^="void(0)"]) {
      color: inherit;
      text-decoration: none;
    }

    &:not([data-is="text"]) {
      &:visited:not(:focus-visible, :hover, :active) {
        color: var(--clr-accent__lowered);
      }
    }

    &:where([data-is="text"]) {
      color: inherit;
      text-decoration: none;
    }

    & > span {
      flex: 1 1;
      font: inherit;
      overflow: clip;
      text-align: inherit;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  /* buttons */
  :where(button) {
    align-items: center;
    background-color: var(--clr-background__base);
    border-radius: 5ex;
    color: inherit;
    display: inline-flex;
    font: inherit;
    gap: var(--xs);
    height: 45px;
    outline: solid 2px transparent;
    outline-offset: -2px;
    overflow: clip;
    padding: 0 var(--md);
    text-align: inherit;
    transition-property: background-color, color, filter, outline, outline-color, outline-offset;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    white-space: nowrap;
    width: fit-content;

    &:focus-visible {
      outline-color: var(--clr-text__base);
    }

    &:hover {
      background-color: var(--clr-background__raised);
    }

    &:active {
      background-color: var(--clr-background__lowered);
    }

    &:has(> :where([data-part='lead']):first-child) {
      padding-left: var(--sm);
    }

    &:has(> :where([data-part='trail']):last-child) {
      padding-right: var(--sm);
    }

    &:has(> :where(i, figure, kbd):only-child) {
      aspect-ratio: 1/1;
      display: grid;
      flex-shrink: 0;
      height: 45px;
      padding: 0;
      place-content: center;
      width: 45px;

      &[data-variant='ghost'] {
        height: max-content;
        width: max-content;
      }
    }

    &:where([data-variant="outline"]) {
      background-color: transparent;
      color: var(--clr-text__base);
      outline-color: var(--clr-border__base);
    }

    &:where([data-variant='ghost']) {
      background-color: transparent;
      outline-color: transparent;
    }

    & > span {
      flex: 1 1;
      font: inherit;
      overflow: clip;
      text-align: inherit;
      text-overflow: ellipsis;
      white-space: nowrap;
    }
  }

  /*select*/
  :where(select, ::picker(select)) {
    appearance: base-select;
  }

  :where(select) {
    background-color: var(--clr-background__base);
    border-radius: var(--xs);
    color: inherit;
    display: inline-block;
    font-size: inherit;
    height: 45px;
    outline: solid 2px var(--clr-border__base);
    outline-offset: -2px;
    overflow: clip;
    padding: 0 var(--md);
    place-items: center;
    transition-property: background-color,
      color,
      outline,
      outline-offset;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    white-space: nowrap;
    width: fit-content;

    &:focus-visible {
      outline-color: var(--clr-accent__base);
    }

    &::picker(select) {
      appearance: base-select;
      background-color: var(--clr-background__base);
      border-radius: var(--xs);
      color: inherit;
      flex-direction: column;
      border: solid 2px var(--clr-border__base);
      overflow-x: clip;
      overflow-y: auto;
      transition-property: opacity, visibility;
      transition-duration: var(--animDuration);
      transition-timing-function: var(--animTiming);
      transition-behavior: allow-discrete;
    }

    &:open::picker(select) {
      display: flex;
    }

    & > option {
      align-items: center;
      display: inline-flex;
      font: inherit;
      flex-shrink: 0;
      gap: var(--xs);
      height: 45px;
      overflow: clip;
      padding: 0 var(--md);
      transition-property: background-color, color, filter, outline, outline-color, outline-offset;
      transition-duration: var(--animDuration);
      transition-timing-function: var(--animTiming);
      white-space: nowrap;
    }
  }

  /* inputs */
  :where(input) {
    background-color: var(--clr-background__base);
    border-radius: var(--xs);
    color: var(--clr-text__base);
    display: inline-block;
    font-size: inherit;
    height: 45px;
    outline: solid 2px var(--clr-border__base);
    outline-offset: -2px;
    overflow: clip;
    padding: 0 var(--md);
    transition-property: background-color, color, outline, outline-offset;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    vertical-align: -webkit-baseline-middle;
    white-space: nowrap;
    width: fit-content;

    &:focus-visible {
      outline-color: var(--clr-accent__base);
    }
  }

  :where(input[type="color"]) {
    --size: var(--xl);

    appearance: none;
    aspect-ratio: 1/1;
    height: var(--size);
    padding: 0;
    width: var(--size);

    &::-webkit-color-swatch-wrapper {
      padding: 0;
    }

    &::-webkit-color-swatch {
      border: none;
    }
  }

  :where(input[type="checkbox"], input[type="radio"]) {
    --size: var(--nm);

    appearance: none;
    aspect-ratio: 1/1;
    background-color: var(--clr-background__base);
    contain: content;
    display: inline-grid;
    flex: 0 0 max-content;
    height: var(--size);
    padding: 0;
    touch-action: manipulation;
    transition-property: color, height, font-size, width;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    user-select: none;
    vertical-align: text-bottom;
    width: var(--size);

    &:checked {
      background-color: var(--clr-accent__base);
    }
  }

  :where(input[type="radio"]) {
    border-radius: 5ex;
  }

  :where(input[type="range"]) {
    --track-height: .5ex;
    --thumb-size: 3ex;
    --thumb-offset: -1.25ex;

    appearance: none;
    background: transparent;
    display: block;
    inline-size: 100%;
    outline: none;
    padding: 0;

    &::-webkit-slider-runnable-track {
      appearance: none;
      background-color: var(--clr-border__base);
      block-size: var(--track-height);
      border-radius: 5ex;
      cursor: pointer;
    }

    &::-webkit-slider-thumb {
      appearance: none;
      background-color: var(--clr-text__base);
      block-size: var(--thumb-size);
      border-radius: 5ex;
      cursor: ew-resize;
      inline-size: var(--thumb-size);
      margin-top: var(--thumb-offset);
      transition-property: background-color;
      transition-duration: var(--animDuration);
      transition-timing-function: var(--animTiming);

      &:hover {
        background-color: var(--clr-text__raised);
      }

      &:active {
        background-color: var(--clr-text__lowered);
      }
    }
  }

  /* textarea */
  :where(textarea) {
    background-color: var(--clr-background__base);
    border-radius: var(--xs);
    color: var(--clr-text__base);
    display: inline-block;

    -moz-field-sizing: content;
    -webkit-field-sizing: content;
    field-sizing: content;

    font-size: inherit;

    min-height: 75px;

    outline: solid 2px var(--clr-border__base);
    outline-offset: -2px;
    overflow: clip;
    padding: var(--sm);
    resize: both;

    transition-property: background-color, color, outline, outline-offset;
    transition-duration: var(--animDuration);
    transition-timing-function: var(--animTiming);
    width: 100%;

    &:focus-visible {
      outline-color: var(--clr-accent__base);
    }
  }

  /* table */
  :where(table) {
    display: block;
    background-color: var(--clr-background__base);
    border-collapse: collapse;
    border-spacing: 0;
    outline: solid 2px var(--clr-border__base);
    outline-offset: -2px;
    overflow-x: auto;
    position: relative;
    table-layout: auto;
    width: fit-content;

    :where(caption) {
      background-color: var(--clr-background__base);
      font-size: inherit;
      overflow: clip;
      padding: var(--sm);
      text-align: center;
      width: 100%;

      > * {
        vertical-align: middle;
      }
    }

    :where(th) {
      min-height: 100px;
      padding: var(--lg) var(--xl) var(--lg);
    }

    :where(td) {
      min-height: 75px;
      padding: var(--nm) var(--xl) var(--lg);
    }

    :where(th, td) {
      border: solid 1px var(--clr-border__base);
      font: inherit;
      max-width: none;
      min-width: max-content;
      overflow: clip;
      text-align: left;
      vertical-align: baseline;
      white-space: nowrap;
      width: auto;
    }
  }

  /* dialog */
  :where(dialog) {
    background-color: var(--clr-background__base);
    border-radius: var(--sm);
    height: max-content;
    inset: 0;
    margin: auto;
    /* outline: solid 2px var(--clr-border__base);
    outline-offset: -2px; */
    position: absolute;

    &:modal {
      outline: solid 2px var(--clr-border__base);
      outline-offset: -2px;
    }

    &::backdrop {
      background-color: hsl(from var(--clr-background__lowered) h s l / 75%);
      backdrop-filter: blur(0.5ex);
    }
  }
}