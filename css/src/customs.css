@layer customs {
  :where(x-app, #app) {
    --outter-gutter: 0;
    --outter-columns: minmax(0, max-content);
    --inner-gutter: minmax(1.5rem, 1fr);
    --inner-column: minmax(0, 80rem);

    display: grid;
    grid-template-columns:
      [expand-start] var(--outter-gutter) [left-start] var(--outter-columns) [left-end] 0 [breakout-start] var(--inner-gutter) [inner-start] var(--inner-column) [inner-end] var(--inner-gutter) [breakout-end] 0 [right-start] var(--outter-columns) [right-end] var(--outter-gutter) [expand-end];
    grid-template-rows:
      [expand-start] 0 [top-start] max-content [top-end] 0 [center-start]minmax(0, 1fr)[center-end] 0 [bottom-start] max-content [bottom-end] 0 [expand-end];
    min-height: 100dvh;
    overflow: clip;
    width: 100%;

    & > * {
      grid-column: inner-start/inner-end;
      grid-row: center-start/center-end;
    }
  }

  :where(x-surlayer, x-sublayer) {
    display: grid;
    height: 100dvh;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    isolation: isolate;
    margin: 0;
    position: fixed;
    visibility: hidden;
    width: 100dvw;

    > * {
      visibility: visible;
    }
  }

  :where(x-sublayer) {
    container: sublayer / size;
    z-index: -100;
  }

  :where(x-surlayer) {
    container: surlayer / size;
    z-index: 100;
  }

  :where(x-grid) {
    --cols: 1;
    --gap: 0px;

    --count: auto-fill;
    --track_min: clamp(5rem, 100%, 15rem);
    --track_max: 1fr;

    display: grid;
    gap: var(--gap);
    /* grid-auto-rows: max-content; */
    grid-template-columns:
      repeat(var(--count),
        minmax(max(var(--track_min), 100% / var(--cols) - var(--gap)),
          var(--track_max)));
  }

  :where(x-flex, x-row) {
    display: flex;
  }

  :where(nav) {
    :where(x-flex) {
      flex: 1 1;
    }
  }

  :where(x-wrap) {
    display: flex;
    flex-wrap: wrap;
  }

  :where(x-col, x-column, x-group, x-stack) {
    display: flex;
    flex-direction: column;
  }

  :where(x-block) {
    display: block;
  }

  :where(x-card) {
    background-color: var(--clr-background__raised);
    border-radius: var(--xs);
    display: flex;
    flex-direction: column;
    flex: 1 1;
    gap: var(--nm);
    outline: dashed 2px var(--clr-border__base);
    outline-offset: -2px;
    padding: var(--nm);
    width: 100%;
  }

  :where(x-window) {
    background-color: var(--clr-background__base);
    backdrop-filter: blur(0.5ex);
    border-radius: var(--md);
    container: xwindow / size;
    display: block;
    height: 100%;
    isolation: isolate;
    outline: solid 2px var(--clr-border__base);
    outline-offset: 0;
    overflow: clip;
    position: relative;
    width: 100%;
  }

  :where(x-body) {
    display: block;
    height: 100%;
    isolation: isolate;
    overflow: auto;
    position: relative;
    width: 100%;

    & > * {
      flex-shrink: 0;
    }
  }

  :where([data-roles~="--input"]) {
    align-items: center;
    background-color: var(--clr-background__base);
    border-radius: var(--xs);
    display: flex;
    gap: var(--xs);
    height: 45px;
    outline: solid 2px var(--clr-border__base);
    outline-offset: -2px;
    overflow: clip;
    padding: 0 var(--nm);
    transition-duration: var(--animDuration);
    transition-property: background-color, color, outline, outline-offset;
    transition-timing-function: var(--animTiming);

    &:has(:focus) {
      outline-color: var(--clr-accent__base);
    }

    & > input {
      background-color: transparent;
      border-radius: 0;
      height: auto;
      outline: none;
      padding: 0;
      width: 100%;
    }

    & > :where(.icon, button, figure) {
      flex-shrink: 0;
    }

    &:has(> :where(.icon, figure, button, kbd):first-child):not(:has(> :where(.icon, figure, button, kbd):last-child)) {
      padding-left: var(--md);
    }

    &:has(> :where(.icon, button, figure):last-child):not(:has(> :where(.icon, figure, button, kbd):first-child)) {
      padding-right: var(--md);
    }

    &:has(> :where(.icon, figure, button, kbd):first-child):has(> :where(.icon, figure, button, kbd):last-child) {
      padding-left: var(--md);
      padding-right: var(--md);
    }
  }
}