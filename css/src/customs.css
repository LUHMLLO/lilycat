@layer customs {
  :where(x-app, #app) {
    --outter-gutter: 0;
    --outter-columns: minmax(0, max-content);
    --inner-gutter: minmax(1rem, 1fr);
    --inner-column: minmax(0, 80rem);

    display: grid;
    grid-template-columns:
      [expand-start] var(--outter-gutter) [left-start] var(--outter-columns) [left-end] 0 [breakout-start] var(--inner-gutter) [inner-start] var(--inner-column) [inner-end] var(--inner-gutter) [breakout-end] 0 [right-start] var(--outter-columns) [right-end] var(--outter-gutter) [expand-end];
    overflow: clip;
    width: 100%;

    & > * {
      grid-column: inner-start/inner-end;
    }
  }

  :where(x-surlayer, x-sublayer) {
    display: grid;
    height: 100dvh;
    top: 0;
    right: 0;
    bottom: 0;
    left: 0;
    isolation: isolate;
    margin: 0;
    position: fixed;
    visibility: hidden;
    width: 100dvw;

    > * {
      visibility: visible;
    }
  }

  :where(x-sublayer) {
    container: sublayer / size;
    z-index: -100;
  }

  :where(x-surlayer) {
    container: surlayer / size;
    z-index: 100;
  }

  :where(x-grid) {
    --cols: 1;
    --gap: 0px;

    --count: auto-fill;
    --track_min: 10rem;
    --track_max: 1fr;

    display: grid;
    gap: var(--gap);
    /* grid-auto-rows: max-content; */
    grid-template-columns:
      repeat(var(--count),
        minmax(max(var(--track_min), 100% / var(--cols) - var(--gap)),
          var(--track_max)));
  }

  :where(x-flex, x-row) {
    display: flex;
  }

  :where(nav) {
    :where(x-flex) {
      flex: 1 1;
    }
  }

  :where(x-wrap) {
    display: flex;
    flex-wrap: wrap;
  }

  :where(x-col, x-column, x-group, x-stack) {
    display: flex;
    flex-direction: column;
  }

  :where(x-block) {
    display: block;
  }

  :where(x-card) {
    --background: var(--clr-primary);
    background-color: hsl(from var(--background) h s calc(l + var(--ratio-backgrounds)));
    display: flex;
    flex-direction: column;
    flex: 1 1;
    gap: var(--nm);
    padding: var(--nm);
    width: 100%;
  }

  :where(x-window) {
    background-color: hsl(from var(--clr-background) h s calc(l + var(--ratio-backgrounds))/25%);
    backdrop-filter: blur(0.5ex);
    border-radius: var(--md);
    display: block;
    height: 100%;
    isolation: isolate;
    outline: solid 2px hsl(from var(--clr-background) h s calc(l + var(--ratio-texts)));
    outline-offset: -2px;
    overflow: clip;
    position: relative;
    width: 100%;
  }

  :where(x-body) {
    display: block;
    height: 100%;
    isolation: isolate;
    overflow: auto;
    position: relative;
    width: 100%;

    & > * {
      flex-shrink: 0;
    }
  }
}