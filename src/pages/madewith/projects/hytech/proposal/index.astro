---
import Layout from './_lib/layout.astro';

const fields = [
	{
		label: 'First Name',
		name: 'first_name',
		type: 'text',
		required: true,
	},
	{
		label: 'Last Name',
		name: 'last_name',
		type: 'text',
		required: true,
	},
	{
		label: 'Mobile Phone',
		name: 'mobile_phone',
		type: 'tel',
		required: true,
	},
	{
		label: 'Email',
		name: 'email',
		type: 'email',
		required: true,
	},
	//------------------------------------------------------------------------------------------------//
	{
		label: 'First Name (2nd)',
		name: 'first_name_2',
		type: 'text',
		status: 'debug',
		caption: 'this field must be hidden by default',
	},
	{
		label: 'Last Name (2nd)',
		name: 'last_name_2',
		type: 'text',
		status: 'debug',
		caption: 'this field must be hidden by default',
	},
	{
		label: 'Mobile Phone (2nd)',
		name: 'customer_2_mobile',
		type: 'tel',
		status: 'debug',
		caption: 'this field must be hidden by default',
	},
	{
		label: 'Email (2nd)',
		name: 'customer_2_email',
		type: 'email',
		status: 'debug',
		caption: 'this field must be hidden by default',
	},
	//------------------------------------------------------------------------------------------------//
	{
		label: 'Street',
		name: 'street',
		type: 'text',
	},
	{
		label: 'City',
		name: 'city',
		type: 'text',
	},
	{
		label: 'State',
		name: 'state',
		type: 'text',
	},
	{
		label: 'Zip Code',
		name: 'zipcode',
		type: 'number',
	},
	{
		label: 'Utiliy Company',
		name: 'utility_company',
		type: 'text',
		status: 'error',
		caption: 'this field is required',
		required: true,
	},
];
---

<script is:inline>
	async function testForm() {
		console.clear();

		const form = document.querySelector('form');
		console.log('form', form);

		const data = new FormData(form);
		console.log('data', data);

		const ul_Results = document.querySelector('#testResults');
		ul_Results.innerHTML = '';

		data.entries().forEach((entry) => {
			let text = `${Object.values(entry)[0]} : ${Object.values(entry)[1]}`;
			console.log(text);

			let li = document.createElement('li');
			li.innerText = text;

			ul_Results.appendChild(li);
		});
	}
</script>

<Layout>
	<form>
		<section class='g-lg'>
			<header>
				<h6 class='clr-subtext'>Main Content</h6>
			</header>
			<ly-grid cols='2' class='g-lg'>
				{
					fields.map((field) => (
						<ly-field
							label={field.label}
							name={field.name}
							type={field.type}
							required={field.required}
							caption={
								field.caption ||
								'caption can be visible all times, but it will render an icon and change color if a valid status is provided'
							}
							status={field.status}>
							<input />
						</ly-field>
					))
				}
			</ly-grid>
		</section>
	</form>

	<br />

	<section>
		<ly-flex axis='col' class='outln-dashed outln-subtext p-5xl g-xl'>
			<h6>test submit</h6>
			<button onclick='testForm()'>submit</button>
			<ul id='testResults' class='outln-dashed outln-subtext p-5xl g-xl'></ul>
		</ly-flex>
	</section>
</Layout>
