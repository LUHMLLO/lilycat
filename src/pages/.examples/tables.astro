---
import Layout from 'src/layouts/docs.astro';
import { FormatCurrency } from 'src/lib/shared/utils/intl.formatCurrency';
import { FormatDate } from 'src/lib/shared/utils/intl.formatDate';

const filters = [
	{
		icon: 'box',
		name: 'Category',
	},
	{
		icon: 'calendar_today',
		name: 'Date',
	},
	{
		icon: 'calendar_clock',
		name: 'Created At',
	},
	{
		icon: 'calendar_clock',
		name: 'Modified At',
	},
	{
		icon: 'tag',
		name: 'Quantity',
	},
	{
		icon: 'account_circle',
		name: 'Ownership',
	},
	{
		icon: 'attach_money',
		name: 'Price',
	},
	{
		icon: 'format_shapes',
		name: 'Type',
	},
	{
		icon: 'lasso_select',
		name: 'Status',
	},
	{
		icon: 'keyboard_command_key',
		name: 'Actions',
	},
];

const columns = [
	'Status',
	'Item Name',
	'Category',
	'Quantity',
	'Price',
	'Sold At',
	'Type',
	'Owner',
	'Modified At',
	'Created At',
	'Actions',
];

const rows = [
	{
		status: 'Completed',
		name: 'Wireless Headphones',
		category: 'Electronics',
		quantity: 1,
		price: 79.99,
		sold_at: FormatDate(new Date('2024-05-28')),
		type: 'Over-Ear',
		ownership: 'Warehouse',
		modified_at: FormatDate(new Date()),
		created_at: FormatDate(new Date('2024-05-20')),
		actions: [
			{
				icon: 'asterisk',
				name: 'action',
				callback: () => console.log('View product details'),
			},
		],
	},
	{
		status: 'Pending',
		name: 'Cotton T-Shirt',
		category: 'Clothing',
		quantity: 3,
		price: 14.5,
		sold_at: null,
		type: 'Crewneck',
		ownership: 'Store A',
		modified_at: FormatDate(new Date()),
		created_at: FormatDate(new Date('2024-05-24')),
		actions: [
			{
				icon: 'asterisk',
				name: 'action',
				callback: (param: any) =>
					console.log(`Pass param to function (Param: ${param})`),
			},
		],
	},
	{
		status: 'Ongoing',
		name: 'Mountain Bike',
		category: 'Sports & Outdoors',
		quantity: 2,
		price: 499.99,
		sold_at: null,
		type: 'Full Suspension',
		ownership: 'Store B',
		modified_at: FormatDate(new Date('2024-05-27')),
		created_at: FormatDate(new Date('2024-05-15')),
		actions: [
			{
				icon: 'asterisk',
				name: 'action',
				callback: (param: any) =>
					console.log(`Pass param to function (Param: ${param})`),
			},
		],
	},
	{
		status: 'Completed',
		name: 'Running Shoes',
		category: 'Sports & Outdoors',
		quantity: 0, // Sold out
		price: 89.95,
		sold_at: FormatDate(new Date('2024-05-23')),
		type: 'Neutral Cushioning',
		ownership: 'Warehouse',
		modified_at: FormatDate(new Date()),
		created_at: FormatDate(new Date('2024-04-30')),
		actions: [], // No actions since sold out
	},
	{
		status: 'Ongoing',
		name: 'Laptop Charger',
		category: 'Electronics',
		quantity: 5,
		price: 29.5,
		sold_at: null,
		type: 'Universal',
		ownership: 'Store A',
		modified_at: FormatDate(new Date('2024-05-22')),
		created_at: FormatDate(new Date('2024-05-10')),
		actions: [
			{
				icon: 'asterisk',
				name: 'action',
				callback: (param: any) =>
					console.log(`Pass param to function (Param: ${param})`),
			},
		],
	},
	{
		status: 'Ongoing',
		name: 'Coffee Mug',
		category: 'Kitchenware',
		quantity: 12,
		price: 9.99,
		sold_at: null,
		type: 'Ceramic',
		ownership: 'Store B',
		modified_at: FormatDate(new Date('2024-05-21')),
		created_at: FormatDate(new Date('2024-05-02')),
		actions: [
			{
				icon: 'asterisk',
				name: 'action',
				callback: (param: any) =>
					console.log(`Pass param to function (Param: ${param})`),
			},
		],
	},
];
---

<Layout>
	<!--  -->
	<h1>Table</h1>
	<p>
		Lorem, ipsum dolor sit amet consectetur adipisicing elit. Aut numquam minus
		nihil cupiditate aperiam iusto corrupti ullam, itaque culpa soluta, nisi
		necessitatibus in blanditiis, illo omnis minima voluptatibus enim labore!
	</p>
	<!--  -->
	<ly-slider axis='x' class='g-5xs' tmpl-expand>
		<button class='bg-text clr-background ps-sticky left z-2'>
			<ly-icon>asterisk</ly-icon>
			<span>All</span>
		</button>
		{
			filters.map((filter) => (
				<ly-dropdown>
					<summary slot='summary' class='__button __outline'>
						<ly-icon>{filter.icon}</ly-icon>
						<span>{filter.name}</span>
					</summary>
					<button> option </button>
				</ly-dropdown>
			))
		}
	</ly-slider>
	<ly-slider tmpl-expand>
		<table>
			<thead>
				<th><ly-check variant='checkbox'></ly-check></th>
				{columns.map((column) => <th>{column}</th>)}
			</thead>
			<tbody>
				{
					rows.map((row) => (
						<tr>
							<td>
								<ly-check variant='checkbox' />
							</td>
							{Object.entries(row).map(([key, value]) => {
								const parsedKey = key.toLowerCase();

								if (parsedKey === 'price') {
									return (
										<td>
											<var>{FormatCurrency(value!.toString())}</var>
										</td>
									);
								}

								if (
									['created_at', 'modified_at', 'sold_at'].includes(parsedKey)
								) {
									if (!value)
										return (
											<td>
												<pre>---</pre>
											</td>
										);
									return (
										<td>
											<time>{value}</time>
										</td>
									);
								}

								if (parsedKey === 'actions') {
									if (Object.values(value as Object).length < 1) {
										return <td />;
									}
									return (
										<td>
											<ly-dropdown class='w-100'>
												<summary slot='summary' class='w-100'>
													<ly-icon>more_vert</ly-icon>
												</summary>
												{Object.values(value as Object).map((action) => (
													<button>
														<ly-icon>{action.icon}</ly-icon>
														<span>{action.name}</span>
													</button>
												))}
											</ly-dropdown>
										</td>
									);
								}

								return (
									<td>
										<p>{value}</p>
									</td>
								);
							})}
						</tr>
					))
				}
			</tbody>
		</table>
	</ly-slider>
</Layout>
