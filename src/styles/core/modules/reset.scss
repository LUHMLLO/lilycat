@use '../lib/colors';
@use '../lib/scale' as *;
@use 'sass:map';

@layer x-reset {
	:root {
		--xxxs: #{DownScale(15)};
		--radius: #{map.get($Scale, 5xs)};
		--transitionSettings: 512ms cubic-bezier(0.2, 0, 0, 1);
		--scrollbar: '';
		--fontFamily: system-ui, -apple-system, BlinkMacSystemFont, 'Segoe UI',
			Roboto, Oxygen, Ubuntu, Cantarell, 'Open Sans', 'Helvetica Neue',
			sans-serif;
		--fontHeight: 125%;
	}

	*,
	*:before,
	*:after {
		-webkit-box-sizing: border-box;
		-moz-box-sizing: border-box;
		box-sizing: border-box;
		clear: both;

		-webkit-backface-visibility: hidden;
		backface-visibility: hidden;

		-webkit-overflow-scrolling: touch;
		overscroll-behavior: contain;
		scroll-behavior: smooth;
	}

	* {
		border: none;
		outline: none;

		font-weight: 400;

		margin: 0;
		padding: 0;

		max-width: 100%;
		height: max-content;

		position: relative;
	}

	* {
		scrollbar-color: hsla(0, 0%, 9%, 0.333) hsla(0, 0%, 6%, 0.333);
		scrollbar-width: map.get($Scale, 5xs);
		scrollbar-width: thin;
		// scrollbar-gutter: stable;

		&::-webkit-scrollbar {
			display: var(--scrollbar);
			height: map.get($Scale, 5xs);
			width: map.get($Scale, 5xs);
		}

		&::-webkit-scrollbar-track {
			background-color: hsla(0, 0%, 6%, 0.333);
			border-radius: var(--radius);
		}

		&::-webkit-scrollbar-thumb {
			background-color: hsla(0, 0%, 9%, 0.333);
			border-radius: var(--radius);

			&:hover {
				background-color: hsla(0, 0%, 12%, 0.333);
			}

			&:active {
				background-color: hsla(0, 0%, 15%, 0.333);
			}
		}
	}

	html {
		text-rendering: optimizeLegibility;
		-webkit-font-smoothing: antialiased;
		-moz-osx-font-smoothing: grayscale;

		-webkit-tap-highlight-color: transparent;
		-ms-overflow-style: none;

		background-color: transparent;
		background: transparent;
		color: map.get(colors.$Text, 500);
		font-family: var(--fontFamily);
		font-size: $base;
		line-height: var(--fontHeight);

		h1,
		h2,
		h3,
		h4,
		h5,
		h6 {
			color: map.get(colors.$Text, 100);
			font-weight: 500;
			line-height: var(--fontHeight);
		}

		h1 {
			font-size: map.get($Scale, 5xl);
		}

		h2 {
			font-size: map.get($Scale, 4xl);
		}

		h3 {
			font-size: map.get($Scale, 3xl);
		}

		h4 {
			font-size: map.get($Scale, 2xl);
		}

		h5 {
			font-size: map.get($Scale, xl);
		}

		h6 {
			font-size: map.get($Scale, lg);
		}

		a,
		article,
		div,
		header,
		input,
		footer,
		nav,
		p,
		section,
		textarea {
			font-size: map.get($Scale, nm);
		}

		a,
		button,
		input,
		select,
		summary {
			transition: background-color var(--transitionSettings),
				color var(--transitionSettings), outline-color var(--transitionSettings),
				border-color var(--transitionSettings);
		}
	}

	body {
		background-color: map.get(colors.$Surface, 900);
		display: flex;
		flex-direction: row;
		height: 100dvh;
		overflow: hidden;
	}

	main,
	aside {
		overflow-x: hidden;
		overflow-y: auto;
		touch-action: pan-y;
	}

	nav,
	ul,
	ol,
	li {
		gap: map.get($Scale, 5xs);
		width: 100%;
	}

	main {
		display: flex;
		flex-direction: column;
		flex-grow: 1;
		flex-shrink: 1;
		gap: map.get($Scale, 2xl);
		width: 100%;
	}

	aside {
		background-color: map.get(colors.$Surface, 800);
		display: inline-flex;
		flex-direction: column;
		flex-shrink: 0;
		gap: map.get($Scale, 2xl);
		padding: map.get($Scale, 2xl);
		width: max-content;

		nav {
			gap: map.get($Scale, 5xs);
		}
	}

	a {
		align-items: center;
		color: inherit;
		cursor: pointer;
		display: inline-flex;
		flex-direction: row;
		gap: map.get($Scale, 5xs);
		text-decoration: none;
		vertical-align: middle;
		width: max-content;

		&:focus {
			color: map.get(colors.$Accent, 600);
		}

		@media (hover: hover) {
			&:hover {
				color: map.get(colors.$Accent, 400);
			}
		}

		&:active {
			color: map.get(colors.$Accent, 700);
		}
	}

	figure {
		background-color: map.get(colors.$Surface, 800);
		border-radius: var(--radius);

		display: inline-flex;
		align-items: center;
		justify-content: center;
		flex-shrink: 0;

		max-width: 100%;
		height: auto;

		overflow: hidden;

		img {
			width: 100%;
			height: 100%;
		}
	}

	img {
		object-fit: cover;
		object-position: center;
	}

	img,
	svg,
	video,
	canvas,
	audio,
	iframe,
	embed,
	object {
		display: flex;
		vertical-align: middle;
		-ms-user-drag:none;
		-moz-user-drag:none;
		-webkit-user-drag: none;
		user-select: none;
	}

	details {
		color: inherit;
		display: inline-flex;
		flex-direction: column;
		transition: height var(--transitionSettings);
		height: max-content;

		summary {
			color: map.get(colors.$Text, 100);
			cursor: pointer;
			font-weight: 500;
			gap: map.get($Scale, 5xs);
			justify-content: space-between;

			[class*='material-symbols'] {
				transition: rotate var(--transitionSettings),
					scale var(--transitionSettings);
			}
		}

		&[open] > summary > [class*='material-symbols']:last-of-type {
			rotate: -180deg;
		}
	}

	dialog {
		background-color: map.get(colors.$Surface, 800);
		border-radius: var(--radius);
		color: inherit;
		flex-direction: column;
		gap: map.get($Scale, xs);
		margin: auto;
		max-height: 100%;
		padding: map.get($Scale, xs);

		&[open] {
			display: flex;
		}

		&::backdrop {
			display: block;
			content: '';
			background-color: map.get(colors.$Surface, 900);
			backdrop-filter: blur(0.1875rem);
			opacity: 0.88;
		}

		&:modal {
			gap: map.get($Scale, 5xl);
			height: 96dvh;
			max-height: 100dvh;
			max-width: 100dvw;
			padding: map.get($Scale, 5xl);
			width: 96dvw;
		}
	}

	article {
		overflow: hidden;
	}

	span {
		font: inherit;
	}

	section {
		display: flex;
		flex-direction: column;
		gap: map.get($Scale, 5xs);
	}

	code,
	kbd,
	pre {
		font-family: 'JetBrains Mono', 'DM Mono', 'Courier New', Courier, mono,
			monospace;
	}

	kbd {
		align-items: center;
		background-color: map.get(colors.$Surface, 500);
		border-radius: var(--radius);
		display: inline-flex;
		font-size: map.get($Scale, sm);
		font-weight: 500;
		gap: map.get($Scale, 5xs);
		justify-content: center;
		padding: map.get($Scale, 5xs);
		outline: solid calc(0.5 * var(--xxxs)) map.get(colors.$Surface, 600);
		outline-offset: calc(-0.5 * var(--xxxs));

		[class*='material-symbols'] {
			font-size: map.get($Scale, lg) !important;
		}
	}

	b,
	strong {
		font-weight: 500;
	}

	ul,
	ol {
		list-style-type: none;
		width: 100%;

		ul,
		ol {
			margin-inline-start: map.get($Scale, nm);
		}
	}

	li {
		display: flex;

		&::marker {
			content: '' !important;
			display: none !important;
			opacity: 0 !important;
			pointer-events: none !important;
			user-select: none !important;
			visibility: hidden !important;
		}
	}

	dl {
		display: flex;
		flex-direction: column;
		list-style-type: none;
		gap: map.get($Scale, 5xs);
		width: 100%;

		dt,
		dd {
			display: block;
		}

		dt {
			color: map.get(colors.$Text, 100);
		}

		dd {
			padding-left: map.get($Scale, xl);
		}
	}

	hr {
		background-color: transparent;
		display: block;
		flex-shrink: 1;
		flex-grow: 1;
		height: map.get($Scale, xs);
		width: 100%;
	}

	table {
		background-color: transparent;
		border-collapse: collapse;

		thead {
			background-color: map.get(colors.$Surface, 700);
		}

		tbody {
			background-color: map.get(colors.$Surface, 800);
		}

		td,
		th {
			padding: map.get($Scale, 5xs) map.get($Scale, xs);
			border: solid 0.0625rem;
			border-color: map.get(colors.$Surface, 900);
			white-space: nowrap;
		}
	}

	caption,
	figcaption,
	label,
	legend,
	sub,
	sup,
	var {
		font-size: map.get($Scale, md);
		font-weight: 500;
	}

	sub {
		vertical-align: sub;
	}

	sup {
		vertical-align: super;
	}

	small {
		font-size: 72%;
		font-weight: 500;
	}

	var {
		font-style: normal;
		font-variant-numeric: slashed-zero;

		&[x-variant='price'] {
			color: map.get(colors.$Success, text);
			font-weight: 500;
		}
	}

	form {
		background-color: map.get(colors.$Surface, 200);
		display: flex;
		flex-direction: column;
		flex-shrink: 1;
		border-radius: var(--radius);
		gap: map.get($Scale, 5xs);
		padding: map.get($Scale, nm);
		overflow: hidden;
		width: 100%;
	}

	input {
		outline: solid var(--xxxs);
		outline-offset: calc(-1 * var(--xxxs));
		outline-color: map.get(colors.$Surface, 200);

		border-radius: var(--radius);
		color: map.get(colors.$Text, 100);

		display: flex;
		align-items: center;
		flex-shrink: 1;
		font-size: map.get($Scale, sm);
		gap: map.get($Scale, 5xs);
		padding: map.get($Scale, 3xs);

		width: 100%;

		background-color: map.get(colors.$Surface, 700);

		@media (hover: hover) {
			&:hover {
				outline-color: map.get(colors.$Surface, 900);
				background-color: map.get(colors.$Surface, 600);
			}
		}

		&:focus {
			outline-color: map.get(colors.$Accent, 400);
		}

		&[required]:valid {
			outline-color: map.get(colors.$Accent, xs);
		}

		&[type='button'],
		&[type='select'],
		&[type='color'] {
			cursor: pointer;
		}

		&[type='color'] {
			cursor: pointer;
			padding: 0;
			border: none;
			outline: none;
			overflow: hidden;

			&::-webkit-color-swatch-wrapper {
				border: none;
				outline: none;
				position: absolute;
				inset: 0;
				width: 100%;
				height: 100%;
				aspect-ratio: 1/1;
			}

			&::-webkit-color-swatch {
				border: none;
				outline: none;
				position: absolute;
				inset: 0;
				width: 100%;
				height: 100%;
				aspect-ratio: 1/1;
			}

			&::-moz-color-swatch {
				border: none;
				outline: none;
				position: absolute;
				inset: 0;
				width: 100%;
				height: 100%;
				aspect-ratio: 1/1;
			}
		}

		&[type='checkbox'],
		&[type='radio'] {
			appearance: none;
			cursor: pointer;

			background-color: transparent;

			display: inline-flex;
			align-items: center;
			justify-content: center;
			flex-shrink: 0;

			border: none;
			outline: none;
			padding: 0;
			border-radius: 0;

			aspect-ratio: 1/1;
			width: map.get($Scale, xl);
			height: map.get($Scale, xl);
			overflow: hidden;
		}

		&[type='checkbox'] {
			&::before {
				font-family: 'Material Symbols Rounded';
				content: 'check_box_outline_blank';

				display: inline-flex;
				align-items: center;
				justify-content: center;

				font-size: map.get($Scale, 2xl);

				vertical-align: middle;
			}

			@media (hover: hover) {
				&:hover {
					color: map.get(colors.$Accent, 400);
				}
			}

			&:focus {
				color: map.get(colors.$Accent, 500);
			}

			&:active {
				color: map.get(colors.$Accent, 600);
			}

			&:checked {
				color: map.get(colors.$Accent, 500);

				&::before {
					content: 'check_box';
					font-variation-settings: 'FILL' 1;
				}
			}
		}

		&[type='radio'] {
			&::before {
				font-family: 'Material Symbols Rounded';
				content: 'radio_button_unchecked';

				display: inline-flex;
				align-items: center;
				justify-content: center;

				font-size: map.get($Scale, 2xl);

				vertical-align: middle;
			}

			@media (hover: hover) {
				&:hover {
					color: map.get(colors.$Accent, 400);
				}
			}

			&:focus {
				color: map.get(colors.$Accent, 500);
			}

			&:active {
				color: map.get(colors.$Accent, 600);
			}

			&:checked {
				color: map.get(colors.$Accent, 500);

				&::before {
					content: 'radio_button_checked';
					font-variation-settings: 'FILL' 0;
				}
			}
		}
	}

	[type='button'],
	button {
		align-items: center;
		color: map.get(colors.$Text, 100);
		cursor: pointer;
		display: inline-flex;
		flex-direction: row;

		gap: map.get($Scale, 3xs);
		border-radius: var(--radius);
		font-size: map.get($Scale, md);
		padding: map.get($Scale, xs) map.get($Scale, sm);

		text-decoration: none;
		vertical-align: middle;
		width: max-content;
		overflow: hidden;

		background-color: transparent;

		outline: solid var(--xxxs);
		outline-offset: calc(-1 * var(--xxxs));
		outline-color: inherit;

		*:not(
				.icon,
				.material-symbols-rounded,
				.material-symbols-outlined,
				.material-symbols-sharp
			) {
			flex-shrink: 1;
			font-weight: 500;
			max-width: 100%;
			overflow: hidden;
			text-overflow: ellipsis;
			white-space: nowrap;
		}

		&:focus {
			color: map.get(colors.$Accent, 500);
			outline-color: map.get(colors.$Accent, 500);
		}

		@media (hover: hover) {
			&:hover {
				color: map.get(colors.$Accent, 400);
				outline-color: map.get(colors.$Accent, 400);
			}
		}

		&:active {
			color: map.get(colors.$Accent, 600);
			outline-color: map.get(colors.$Accent, 700);
		}
	}

	fieldset {
		display: inline-flex;
		flex-direction: column;
		flex-shrink: 1;
		gap: map.get($Scale, 5xs);
		overflow: hidden;
	}

	textarea {
		background-color: map.get(colors.$Surface, 400);

		outline: solid var(--xxxs);
		outline-offset: calc(-1 * var(--xxxs));
		outline-color: map.get(colors.$Surface, 400);

		border-radius: var(--radius);
		color: map.get(colors.$Text, 100);
		display: block;
		min-height: map.get($Scale, 4xl);
		padding: map.get($Scale, nm);
	}
}
