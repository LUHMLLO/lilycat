@layer reset {
	:is(html) {
		background-color: var(--clr-background);
		color: var(--clr-text);

		font-display: swap;
		font-kerning: auto;
		font-family: var(--baseFontFamily);
		font-size: var(--baseFontSize);

		-moz-osx-font-smoothing: grayscale;
		-webkit-font-smoothing: antialiased;

		font-style: normal;
		font-variant-ligatures: normal;
		font-optical-sizing: auto;
		font-stretch: normal;
		font-weight: var(--baseFontWeight);

		hanging-punctuation: first last;

		letter-spacing: 0.0125rem;

		line-height: var(--baseLineHeight);
		text-align: left;
		text-rendering: optimizeLegibility;

		word-spacing: 0.0625rem;
	}

	:is(html, body) {
		display: contents;

		&:has(ly-app, #app) {
			overflow: clip;
		}
	}

	:where(h1, h2, h3, h4, h5, h6) {
		display: block;
		font-weight: 500;
		text-wrap: balance;

		&:is(h1) {
			font-size: var(--scale-5xl);
		}

		&:is(h2) {
			font-size: var(--scale-4xl);
		}

		&:is(h3) {
			font-size: var(--scale-3xl);
		}

		&:is(h4) {
			font-size: var(--scale-2xl);
		}

		&:is(h5) {
			font-size: var(--scale-xl);
		}

		&:is(h6) {
			font-size: var(--scale-nm);
		}
	}

	/* :where(a) {
		--bg: none;
		--clr: var(--clr-accent);
		--gap: var(--scale-sm);

		align-items: center;
		background-color: var(--bg);
		color: var(--clr);
		display: inline-flex;
		font-size: var(--scale-md);
		gap: var(--gap);
		transition: background-color var(--animDefaults), color var(--animDefaults);

		&[href] {
			cursor: pointer;

			@media (hover: hover) {
				&:hover {
					color: color-mix(in var(--prefers-colorSpace, srgb),
							var(--clr),
							white 6%);

					@container not style(--bg: none) {
						background-color: color-mix(in var(--prefers-colorSpace, srgb),
								var(--bg),
								white 3%);
					}
				}
			}

			&:active {
				color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--clr),
						black 9%);

				@container not style(--bg: none) {
					background-color: color-mix(in var(--prefers-colorSpace, srgb),
							var(--bg),
							black 6%);
				}
			}
		}
	} */

	:where(ol, ul) {
		list-style-position: inside;

		& > li {
			font-size: var(--scale-md);
			text-wrap: pretty;
		}

		& :where(ol, ul) {
			margin-left: var(--scale-sm);
		}
	}

	:where(blockquote) {
		border-left: 0.125rem solid var(--clr-subtext);
		font-size: var(--scale-sm);
		padding: var(--scale-sm) 0 var(--scale-sm) var(--scale-sm);
	}

	:where(cite) {
		font-size: 88%;
		font-style: italic;
		font-weight: 500;
	}

	:where(p) {
		display: block;
		font-size: var(--scale-md);
		text-wrap: pretty;
		max-width: 72ch;
	}

	:where(caption, figcaption, label, legend) {
		display: inline-flex;
		font-size: var(--scale-md);
		font-weight: 500;
	}

	:where(small) {
		font-size: clamp(72%, 0.5vw, 88%);
	}

	:where(span) {
		display: inline-flex;
		color: inherit;
		font: inherit;
		overflow: clip;
		text-overflow: ellipsis;
		white-space: nowrap;
	}

	:where(audio, button, figure, i, iframe, img, picture, svg, video) {
		-webkit-user-select: none;
		user-select: none;
	}

	/* :where(button) {
		--bg: var(--clr-primary);
		--clr: var(--clr-text);
		--gap: var(--scale-sm);
		--spacing: var(--scale-sm);

		align-items: center;
		border-radius: var(--scale-5xl);
		background-color: var(--bg);
		color: var(--clr);
		cursor: pointer;
		display: inline-flex;
		font-size: var(--scale-md);
		font-weight: 400;
		gap: var(--gap);
		height: var(--scale-5xl);
		overflow: clip;
		padding: 0 var(--scale-sm);
		text-overflow: ellipsis;
		transition: background-color var(--animDefaults);
		white-space: nowrap;
		width: fit-content;

		@media (hover: hover) {
			&:hover {
				background-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--bg),
						white 3%);
			}
		}

		&:active {
			background-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--bg),
					black 6%);
		}
	} */

	:where(figure) {
		border-radius: var(--scale-3xs);
		display: inline-grid;
		flex-shrink: 0;
		overflow: clip;

		> img,
		> object,
		> picture,
		> svg {
			height: 100%;
			object-fit: cover;
			object-position: center;
			width: 100%;
		}
	}

	:where(footer, header) {
		display: flex;
		flex-direction: column;
	}

	:where(label, nav) {
		display: flex;
		flex-direction: row;
	}

	:where(label) {
		&:has(input[type='checkbox'], input[type='radio']) {
			align-items: center;
			gap: var(--scale-3xs);
		}
	}

	:where(nav) {
		place-items: center center;
	}

	:where(aside, fieldset, form, main, section) {
		--gap: var(--scale-sm);

		display: flex;
		flex-direction: column;
		gap: var(--gap);
	}

	:where(hr) {
		--bg: var(--clr-primary);
		background-color: var(--bg);

		&[data-variant='vertical'] {
			height: 100%;
			width: calc(var(--scale-5xs) * 0.1625);
		}

		&[data-variant='horizontal'] {
			height: calc(var(--scale-5xs) * 0.1625);
			width: 100%;
		}
	}

	:where(input, textarea, select) {
		--bg: var(--clr-primary);
		--gap: var(--scale-sm);

		align-items: center;
		background-color: var(--bg);
		border-radius: var(--scale-3xs);
		color: var(--clr-text);
		display: inline-flex;
		font-size: var(--scale-md);
		gap: var(--gap);
		height: max-content;
		outline-color: transparent;
		outline-style: solid;
		width: max-content;
		transition: background-color var(--animDefaults);

		&:is(input, select) {
			min-height: var(--scale-5xl);
			padding: 0 var(--scale-sm);
		}

		&:is(textarea) {
			min-height: calc(var(--scale-5xl) * 1.75);
			padding: var(--scale-sm);
		}

		&:focus-visible {
			outline-color: var(--clr-accent);
		}

		@media (hover: hover) {
			&:not(:focus-visible):hover {
				background-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--bg),
						white 3%);
			}
		}

		&:not(:focus-visible):active {
			background-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--bg),
					black 6%);
		}
	}

	:where(input[type='color']) {
		appearance: none;
		aspect-ratio: 1/1;
		border-radius: var(--scale-3xs);
		height: auto;
		overflow: hidden;
		padding: 0 !important;
		width: var(--scale-5xl);

		&::-webkit-color-swatch-wrapper {
			padding: 0 !important;
		}

		&::-webkit-color-swatch {
			border: none !important;
		}
	}

	/* :where(details) {
		display: block;
		width: 100%;

		summary {
			--bg: none;
			--clr: var(--clr-text);
			--gap: var(--scale-sm);

			align-items: center;
			background-color: var(--bg);
			color: var(--clr);
			cursor: pointer;
			display: inline-flex;
			font-size: var(--scale-md);
			gap: var(--gap);
			list-style-type: none;
			transition: background-color var(--animDefaults),
				color var(--animDefaults);
			width: 100%;

			& > .icon:not(:first-of-type) {
				transition: rotate var(--animDefaults);
			}

			@media (hover: hover) {
				&:hover {
					color: color-mix(in var(--prefers-colorSpace, srgb),
							var(--clr),
							white 6%);
					background-color: color-mix(in var(--prefers-colorSpace, srgb),
							var(--bg),
							white 3%);
				}
			}

			&:active {
				color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--clr),
						black 9%);
				background-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--bg),
						black 6%);
			}
		}

		&[open] {
			> summary {
				> .icon:last-of-type {
					rotate: -180deg;
				}
			}
		}
	} */

	:where(dl) {
		gap: var(--scale-5xs);

		& > dt {
			font-size: var(--scale-md);
			font-weight: 500;
		}

		& > dd {
			font-size: var(--scale-md);
			padding-left: var(--scale-sm);
		}
	}

	:where(table) {
		--bg: var(--clr-background);
		--clr: var(--clr-text);

		background-color: var(--bg);
		border-radius: var(--scale-3xs);
		border-collapse: collapse;
		border: none;
		clip: rect(0 0 0 0);
		clip-path: inset(0% round var(--scale-3xs));
		position: relative;
		table-layout: fixed;
		width: 100%;

		& caption {
			inset: 0 auto;
			position: absolute;
		}

		& thead {
			& tr {
				background-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--bg),
						white 3%);
				transition: background-color var(--animDefaults);

				& th {
					font-size: var(--scale-md);
					padding: var(--scale-sm);
					vertical-align: middle;
				}
			}
		}

		& tbody {
			& tr {
				background-color: var(--clr-primary);
				transition: background-color var(--animDefaults);

				& td {
					font-size: var(--scale-md);
					padding: var(--scale-sm);
					vertical-align: middle;
				}

				@media (hover: hover) {
					&:hover {
						background-color: var(--clr-accent);
					}
				}
			}
		}
	}
}

:where(address) {
	font-size: var(--scale-md);
}