@layer normalize {
	:where(dl) {
		display: grid;
		gap: var(--scale-sm);
		min-height: 0;
		position: relative;

		& > dd {
			margin-top: calc(var(--scale-sm) * -1);
		}
	}
}

@layer normalize {
	:where(details) {
		display: inline-flex;
		min-height: 0;
		position: relative;
		width: fit-content;

		& > summary {
			& .__animate {
				transition: rotate var(--animDefaults);
			}
		}

		&[open] {
			& > summary {
				& .__animate {
					rotate: -180deg;
				}
			}
		}
	}
}

@layer normalize {
	:where(a, button, summary) {
		--bg: none;
		--clr: inherit;
		--gap: var(--spacing);
		--mx: 0;
		--my: 0;
		--outln: var(--bg);
		--px: var(--spacing);
		--py: 0;
		--radius: var(--scale-5xl);
		--spacing: var(--scale-5xs);
		--size: clamp(24pt, 2lh, var(--scale-5xl));

		align-items: center;
		background-color: var(--bg);
		border-radius: var(--radius);
		color: var(--clr);
		cursor: pointer;
		display: inline-flex;
		font-size: var(--scale-md);
		font-weight: 400;
		gap: var(--gap);
		margin: var(--my) var(--mx);
		outline: solid transparent;
		overflow: clip;
		padding: var(--py) var(--px);
		text-overflow: ellipsis;
		transition: background-color var(--animDefaults), color var(--animDefaults),
			outline-color var(--animDefaults);
		white-space: nowrap;
		width: fit-content;

		/* text must be wrapped */
		& > span {
			flex: 1;
		}

		& > figure {
			aspect-ratio: 1/1;
			border-radius: 50%;
			height: calc(100% - var(--spacing));
			width: max-content;
		}

		& > ly-icon {
			--bg: none;
			pointer-events: none;
		}

		/* No icons */
		&:not(:has(:where(.__lead):first-child)):not(:has(:where(.__trail):last-child)) {
			--px: calc(var(--spacing) * 2.75);
		}

		/* Left icon only */
		&:has(:where(.__lead):first-child):is(:not(:has(:where(.__trail):last-child))) {
			padding-inline-end: calc(var(--spacing) * 2);
		}

		/* Right icon only */
		&:has(:where(.__trail):last-child):is(:not(:has(:where(.__lead):first-child))) {
			padding-inline-start: calc(var(--spacing) * 2);
		}

		&[href] {
			--clr: var(--clr-accent);
		}

		&:not(button, :is(a, summary).__button) {
			--radius: var(--scale-sm);

			height: max-content;
			padding: 0;
		}

		&:is(button, :is(a, summary).__button) {
			--bg: var(--clr-background);
			height: var(--size);
		}

		&:is(button, .__button).__outline {
			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--outln),
					gray 16%);
		}

		&:is(button, .__button).__fab {
			--px: 0;
			--py: 0;
			aspect-ratio: 1/1;
			place-content: center;
			width: max-content;
		}

		/* Micro Interactions */
		@media (hover: hover) {
			&:hover {
				background-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--bg),
						gray 16%);
				color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--clr),
						gray 16%);

				&:is(button, .__button).__outline {
					outline-color: color-mix(in var(--prefers-colorSpace, srgb),
							var(--outln),
							gray 16%);
				}
			}
		}

		&:active {
			background-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--bg),
					darkgray 16%);
			color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--clr),
					darkgray 16%);

			&:is(button, .__button).__outline {
				outline-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--outln),
						darkgray 16%);
			}
		}

		&:focus-visible {
			--outln: var(--clr-accent);
			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--outln),
					transparent 56%);
		}
	}
}

@layer normalize {
	:where(input, select, textarea) {
		--bg: var(--clr-background);
		--clr: inherit;
		--gap: calc(var(--spacing) * 0.25);
		--mx: 0;
		--my: 0;
		--outln: color-mix(in srgb, var(--bg), darkgray 16%);
		--px: var(--spacing);
		--py: 0;
		--radius: var(--scale-sm);
		--spacing: var(--scale-sm);

		align-items: center;
		background-color: var(--bg);
		border-radius: var(--radius);
		color: var(--clr);
		cursor: pointer;
		font-size: var(--scale-sm);
		font-weight: 400;
		gap: var(--gap);
		margin: var(--my) var(--mx);
		outline: solid var(--outln);
		overflow: clip;
		padding: var(--py) var(--px);
		text-overflow: ellipsis;
		transition: background-color var(--animDefaults), color var(--animDefaults),
			outline-color var(--animDefaults);
		white-space: nowrap;
		width: fit-content;

		/* input, select only */
		&:is(input, select) {
			display: inline-flex;
			height: var(--scale-5xl);
		}

		/* input only */
		&:is(input) {

			&::-webkit-inner-spin-button,
			&::-webkit-outer-spin-button {
				display: none;
			}

			&::-webkit-calendar-picker-indicator {
				cursor: pointer;
				height: 100%;
				inset: 0;
				opacity: 0;
				position: absolute;
				width: 100%;
			}

			&:is([type='color']) {
				appearance: none;
				aspect-ratio: 1/1;
				border-radius: var(--scale-3xs);
				height: auto;
				overflow: hidden;
				padding: 0 !important;
				width: var(--scale-5xl);

				&::-webkit-color-swatch-wrapper {
					padding: 0 !important;
				}

				&::-webkit-color-swatch {
					border: none !important;
				}
			}

			&:is([type='checkbox'], [type='radio']) {
				--bg: transparent;
				--px: 0;
				--size: 1.5lh;

				--iconOff: '';
				--iconOn: 'check';

				aspect-ratio: 1/1;
				appearance: none;
				display: inline-block;
				height: var(--size);
				position: relative;
				vertical-align: middle;
				width: var(--size);

				&::after {
					aspect-ratio: 1/1;
					content: var(--iconOff);
					display: block;
					font-family: var(--prefers-iconFontFamily);
					font-size: 100%;
					line-height: var(--size);
					margin: auto;
					pointer-events: none;
					text-align: center;
					transition: background-color var(--animDefaults),
						color var(--animDefaults), margin var(--animDefaults),
						outline-color var(--animDefaults);
				}

				&:checked {
					&::after {
						background-color: var(--clr-accent);
						content: var(--iconOn);
					}
				}

				&:is([type='checkbox']:not(.__switch)) {
					--radius: 25%;
				}

				&:is([type='radio']:not(.__switch)) {
					--radius: 50%;
				}

				&:is(.__switch) {
					--iconOff: '';
					--iconOn: '';

					display: inline-flex;
					width: calc(var(--size) * 2);

					&::after {
						background-color: color-mix(in var(--prefers-colorSpace, srgb),
								var(--bg),
								darkgray 16%);
						border-radius: 50%;
						height: calc(var(--size) / 2);
						margin-block: auto;
						margin-left: calc(var(--prefers-outlineWidth) + 1%);
						width: calc(var(--size) / 2);
					}

					&:checked {
						&::after {
							background-color: var(--clr-accent);
							margin-left: calc(calc(99% - calc(var(--size) / 2) - var(--prefers-outlineWidth)));
						}
					}
				}
			}

			&:is([type='file']) {
				display: none;
			}
		}

		/* textarea only */
		&:is(textarea) {
			--py: var(--spacing);

			display: block;
			field-sizing: content;
			height: max-content;
			min-height: calc(var(--scale-5xl) * 1.75);
			overflow: auto;
			resize: both;
			text-wrap: pretty;
			width: 100%;
		}

		/* Micro Interactions */
		@media (hover: hover) {
			&:hover {
				outline-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--outln),
						darkgray 16%) !important;
			}
		}

		&:active {
			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--outln),
					darkgray 8%) !important;
		}

		&:focus-visible {
			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--clr-accent),
					transparent 56%) !important;
		}
	}
}

@layer normalize {
	:where(label) {
		--clr: inherit;
		--gap: var(--scale-5xs);

		display: inline-block;
		color: var(--clr);
		font-size: var(--scale-md);
		width: fit-content;

		&:is(.__field) {
			display: grid;
			gap: var(--gap);
			grid-template-columns: minmax(0, 1fr);
			width: 100%;

			& > :where(.__label) {
				font-size: var(--scale-md);
			}

			& > :where(input, select, textarea) {
				width: 100%;
			}

			& > :where(.__caption) {
				color: var(--clr-subtext);
				font-size: var(--scale-sm);
			}
		}
	}
}

@layer normalize {
	:where(nav) {
		display: flex;
		flex-direction: row;
		place-items: center center;
		width: fit-content;

		&:is(.__tabs) {
			--bg: var(--clr-background);
			--radius: var(--scale-5xl);

			background-color: var(--bg);
			border-radius: var(--radius);
			overflow: clip;

			& > :where(button) {
			}
		}
	}
}

@layer normalize {
	:where(table) {
		--bg: var(--clr-background);
		--bg--lighter: color-mix(in var(--prefers-colorSpace, srgb),
				var(--bg),
				darkgray 6%);
		--clr: var(--clr-text);
		--gap: 0;
		--radius: 0;
		--spacing: var(--scale-sm);

		background-color: var(--bg);
		border-collapse: collapse;
		table-layout: auto;
		width: 100%;

		& caption {
			inset: auto 0 0;
			margin: auto;
			position: absolute;
			translate: 0% 100%;
			width: fit-content;
			z-index: auto;
		}

		& tr {
			border-bottom: solid var(--bg--lighter);

			&:first-child {
				border-top: solid var(--bg--lighter);
			}

			& > th,
			& > td {
				font-size: var(--scale-md);
				font-weight: 400;
				height: var(--scale-5xl);
				line-height: 0;
				min-height: fit-content;
				min-width: max-content;
				overflow: clip;
				padding: calc(var(--spacing) * 0.75) calc(var(--spacing) * 3);
				position: relative;
				text-overflow: ellipsis;
				vertical-align: middle;
				white-space: nowrap;
				width: auto;

				& > * {
					line-height: var(--baseLineHeight);
				}

				& > .marker {
					--bg: none;

					inset: 0 0 0 auto;
					margin: auto 0;
					position: absolute;
				}
			}
		}

		& thead {
			& > tr {
				& > th {
					&:not(:last-child) {
						border-right: solid var(--bg--lighter);
					}
				}
			}
		}

		& tbody {
			& > tr {
				transition: background-color var(--animDefaults);

				@media (hover: hover) {
					&:hover {
						background-color: color-mix(in var(--prefers-colorSpace, srgb),
								var(--bg),
								darkgray 1%);
					}
				}

				& > td {
					&:not(:last-child) {
						border-right: solid var(--bg--lighter);
					}
				}
			}
		}
	}
}