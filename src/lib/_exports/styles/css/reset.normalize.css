@layer normalize {
	:where(details) {
		display: inline-flex;
		min-height: 0;
		position: relative;
		width: fit-content;
	}

	:where(a, button, summary) {
		--bg: none;
		--clr: inherit;
		--gap: var(--spacing);
		--mx: 0;
		--my: 0;
		--outln-clr: var(--bg);
		--px: var(--spacing);
		--py: 0;
		--radius: var(--scale-5xl);
		--spacing: var(--scale-5xs);
		--variant: 'outlined';

		align-items: center;
		background-color: var(--bg);
		border-radius: var(--radius);
		color: var(--clr);
		cursor: pointer;
		display: inline-flex;
		font-size: var(--scale-sm);
		font-weight: 400;
		gap: var(--gap);
		margin: var(--my) var(--mx);
		outline: solid transparent;
		overflow: clip;
		padding: var(--py) var(--px);
		text-overflow: ellipsis;
		transition: background-color var(--animDefaults), color var(--animDefaults),
			outline-color var(--animDefaults);
		white-space: nowrap;
		width: fit-content;

		/* text must be wrapped */
		& > span {
			flex: 1 1 100%;
		}

		& > figure {
			aspect-ratio: 1/1;
			border-radius: 50%;
			height: calc(100% - var(--spacing));
			width: auto;
		}

		/* & > ly-icon {
			background-color: red;
			border-radius: 50%;
		} */

		/* No icons */
		&:not(:has(:where([class*='material-symbols'],
					.icon,
					ly-icon,
					ly-check,
					figure):first-child)):not(:has(:where([class*='material-symbols'],
					.icon,
					ly-icon,
					ly-check,
					figure):last-child)) {
			--px: calc(var(--spacing) * 2);
		}

		/* Left icon only */
		&:has(:where([class*='material-symbols'],
				.icon,
				ly-icon,
				ly-check,
				figure):first-child):is(:not(:has(:where([class*='material-symbols'],
						.icon,
						ly-icon,
						ly-check,
						figure):last-child))) {
			padding-inline-end: calc(var(--spacing) * 2);
		}

		/* Right icon only */
		&:has(:where([class*='material-symbols'],
				.icon,
				ly-icon,
				ly-check,
				figure):last-child):is(:not(:has(:where([class*='material-symbols'],
						.icon,
						ly-icon,
						ly-check,
						figure):first-child))) {
			padding-inline-start: calc(var(--spacing) * 2);
		}

		&:not(button, :is(a, summary).__button) {
			--radius: var(--scale-sm);
			height: max-content;
			padding: 0;
		}

		&:is(button, :is(a, summary).__button) {
			--bg: var(--clr-background);
			/*pending to add golden ratioi*/
			min-height: var(--scale-5xl);
			height: fit-content;
		}

		&[href] {
			--clr: var(--clr-accent);
		}

		/* conditional style modifiers */
		&:is(button, .__button).__outlined {
			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--outln-clr),
					gray 16%);

			@media (hover: hover) {
				&:hover {
					outline-color: color-mix(in var(--prefers-colorSpace, srgb),
							var(--outln-clr),
							gray 16%);
				}
			}

			&:active {
				outline-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--outln-clr),
						darkgray 16%);
			}
		}

		/* Micro Interactions */
		&:focus-visible {
			--outln-clr: var(--clr-accent);
			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--outln-clr),
					transparent 56%);
		}

		@media (hover: hover) {
			&:hover {
				background-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--bg),
						gray 16%);
				color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--clr),
						gray 16%);
			}
		}

		&:active {
			background-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--bg),
					darkgray 16%);
			color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--clr),
					darkgray 16%);
		}
	}

	:where(input, select, textarea) {
		--bg: var(--clr-background);
		--clr: inherit;
		--gap: calc(var(--spacing) * 0.25);
		--mx: 0;
		--my: 0;
		--outln-clr: var(--bg);
		--px: var(--spacing);
		--py: 0;
		--radius: var(--scale-sm);
		--spacing: var(--scale-sm);

		align-items: center;
		background-color: var(--bg);
		border-radius: var(--radius);
		color: var(--clr);
		cursor: pointer;
		display: inline-flex;
		font-size: var(--scale-sm);
		font-weight: 400;
		gap: var(--gap);
		margin: var(--my) var(--mx);
		outline: solid color-mix(in srgb, var(--outln-clr), gray 12%);
		overflow: clip;
		padding: var(--py) var(--px);
		text-overflow: ellipsis;
		transition: background-color var(--animDefaults), color var(--animDefaults),
			outline-color var(--animDefaults);
		white-space: nowrap;
		width: fit-content;

		/* input, select only */
		&:is(input, select) {
			height: var(--scale-5xl);
		}

		/* input only */
		&:is(input) {

			&::-webkit-inner-spin-button,
			&::-webkit-outer-spin-button {
				display: none;
			}

			&::-webkit-calendar-picker-indicator {
				cursor: pointer;
				height: 100%;
				inset: 0;
				opacity: 0;
				position: absolute;
				width: 100%;
			}

			&[type='file'] {
				display: none;
			}
		}

		/* textarea only */
		&:is(textarea) {
			--py: var(--spacing);
			height: max-content;
			min-height: calc(var(--scale-5xl) * 1.75);
			overflow: auto;
			resize: both;
			text-wrap: pretty;
		}

		/* Micro Interactions */
		&:focus-visible {
			--outln-clr: var(--clr-accent);

			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--outln-clr),
					transparent 56%) !important;
		}

		@media (hover: hover) {
			&:hover {
				outline-color: color-mix(in var(--prefers-colorSpace, srgb),
						var(--outln-clr),
						gray 16%) !important;
			}
		}

		&:active {
			outline-color: color-mix(in var(--prefers-colorSpace, srgb),
					var(--outln-clr),
					darkgray 16%) !important;
		}
	}
}