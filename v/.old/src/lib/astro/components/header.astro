---
const routes = await Astro.glob('src/pages/docs/*').then((files) => {
	return files.map((file) => file.url);
});
---

<nav class='g-sm place-between p-xl w-100 ps-fixed z-3' data-props='--expand'>
	<a href='/' class='noshrink'>
		<figure class='aspect-[1/1] h-5xl w-max'>
			<img src='/icon.png' alt='logo' style='filter: invert(1);' />
		</figure>
	</a>

	<nav class='g-sm place-end wrap'>
		<a href='/' class='clr-inherit'>Get Started</a>
		<a href='/preview' class='clr-inherit'>Preview</a>
		<a
			href='#'
			data-props='--button --outline'
			class='clr-subtext'
			style='pointer-events: none;'>
			Playground (not available)
		</a>
	</nav>
</nav>

<header
	class='bg-primary [min]h-50[ch] offb-5xl py-5xl place-center radius-3xs'
	data-props='--expand'>
	<h1>Lily's - Kit</h1>
	<h2>Enhanced human interfaces <br /> &amp; user experiences</h2>
	<p class='clr-subtext txt-500'>
		Powered by dead simple CSS props and a mix of common convention rules.
	</p>
</header>

<flex data-props='--expand --x' class='g-sm py-xl w-100'>
	{
		routes.map((route) => (
			<a
				href={route}
				data-props='--button --outline'
				class={
					'clr-inherit txt-500 ' +
					(Astro.url.pathname === route ? 'bg-accent' : '')
				}>
				<span>{route.replace('/docs/', '')}</span>
			</a>
		))
	}
</flex>

<style lang='css' scoped>
	nav:first-child {
		z-index: 3;

		&::after {
			background-color: var(--clr-background);
			content: '';
			height: 100%;
			inset: 0;
			mask: linear-gradient(black 4%, transparent 96%);
			padding-block: calc(var(--scale-5xl) * 2);
			pointer-events: none;
			position: absolute;
			z-index: -1;
		}
	}
</style>
