---

---

<dialog id='menu' data-is='bottomsheet'>
	<header>
		<hr id='menu__handle' />
		<h5>Navigation Menu</h5>
		<p>
			Select the items that you would like to include in this proposal.
			<br />Only available items are shown.
		</p>
	</header>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Customer Information</span>
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Solar Panels</span>
		<input type='checkbox' data-is='switch' />
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Battery System</span>
		<input type='checkbox' data-is='switch' />
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Roof Replacement</span>
		<input type='checkbox' data-is='switch' />
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Electrical Work</span>
		<input type='checkbox' data-is='switch' />
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Energy Efficiency</span>
		<input type='checkbox' data-is='switch' />
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>H.V.A.C</span>
		<input type='checkbox' data-is='switch' />
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Geothermal Services</span>
		<input type='checkbox' data-is='switch' />
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Other Project Adders</span>
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Additional Projects</span>
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Internal Sales Notes</span>
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />
	<a href='/prototype/proposaltooling/customer-information' data-is='button'>
		<span>Financial</span>
		<i data-is='icon' data-part='trail'>arrow_forward_ios</i>
	</a>
	<hr />

	<script type='module' is:inline>
		window.addEventListener('DOMContentLoaded', () => {
			const menu = document.querySelector('#menu');
			const handle = document.querySelector('#menu__handle');
			if (!menu || !handle || !(menu instanceof HTMLDialogElement)) return;

			function handleClickOutside(event) {
				if (!menu.contains(event.target)) {
					menu.close();
				}
			}

			function handleEscKey(event) {
				if (event.key === 'Escape') {
					menu.close();
				}
			}

			addEventListener('menu:toggle', () => {
				if (menu.open) {
					menu.close();
				} else {
					menu.show();
					setTimeout(() => {
						document.addEventListener('click', handleClickOutside);
						document.addEventListener('keydown', handleEscKey);
					});
				}
			});

			menu.addEventListener('close', () => {
				document.removeEventListener('click', handleClickOutside);
				document.removeEventListener('keydown', handleEscKey);
			});

			document
				.querySelectorAll('[data-toggle-menu]')
				.forEach((el) =>
					el.addEventListener('click', () =>
						dispatchEvent(new CustomEvent('menu:toggle')),
					),
				);

			// ─────────────────────────────────────────────
			// DRAG-TO-CLOSE with proper touch support
			let startY = 0;
			let currentY = 0;
			let dragging = false;
			let pointerId = null;

			handle.addEventListener('pointerdown', (e) => {
				if (e.pointerType !== 'touch' && e.pointerType !== 'mouse') return;
				startY = e.clientY;
				currentY = startY;
				dragging = true;
				pointerId = e.pointerId;
				menu.style.transition = 'none';
				handle.setPointerCapture(pointerId);
			});

			handle.addEventListener('pointermove', (e) => {
				if (!dragging || e.pointerId !== pointerId) return;
				currentY = e.clientY;
				const delta = currentY - startY;
				if (delta > 0) {
					menu.style.transform = `translateY(${delta}px)`;
				}
			});

			const endDrag = () => {
				if (!dragging) return;
				const delta = currentY - startY;
				menu.style.transition = '';
				menu.style.transform = '';

				if (delta > 100) {
					menu.close();
				}

				dragging = false;
				pointerId = null;
			};

			handle.addEventListener('pointerup', endDrag);
			handle.addEventListener('pointercancel', endDrag);
		});
	</script>

	<style lang='css' is:inline>
		@scope {
			:scope {
				background-color: var(--clr-background__base);
				max-height: 100%;
				height: calc(100dvh - 35%);

				& > header {
					background-color: inherit;
					inset: 0;
					padding: 0 var(--md) var(--nm);
					position: sticky;
					z-index: 2;

					& > #menu__handle {
						border-radius: var(--xs);
						cursor: grab;
						height: var(--xs);
						margin: var(--xl) auto;
						touch-action: none;
						width: min(100%, 100px);

						&:active {
							cursor: grabbing;
						}
					}

					p {
						color: var(--clr-text__lowered);
						margin-top: var(--xs);
					}
				}

				& > :where(button, a) {
					background-color: inherit;
					border-radius: 0;
					width: 100%;

					& > input {
						flex-shrink: 0;
					}
				}

				& > hr:last-of-type {
					background-color: inherit;
					height: calc(var(--xl) * 2);
				}
			}
		}
	</style>
</dialog>
