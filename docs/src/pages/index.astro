---
import Layout from '../layouts/app.astro';

interface RouteItem {
	path: string;
	name: string;
	title: string;
	description?: string;
	icon?: string;
	component?: unknown;
}

const modules = import.meta.glob('./**/*.{astro,mdx}');
const routes: RouteItem[] = [];

for (const path in modules) {
	const mod = modules[path] as Record<string, any>;

	// Format route path
	const cleanPath = path
		.replace('./', '/')
		.replace(/\/?index\.(astro|mdx)$/, '')
		.replace(/\.(astro|mdx)$/, '');

	const name = cleanPath.split('/').pop() || 'unknown';

	routes.push({
		path: cleanPath,
		name,
		title:
			mod.title ||
			name.replace(/[-_]/g, ' ').replace(/\b\w/g, (l) => l.toUpperCase()) ||
			'Untitled',
		description:
			mod.description ||
			mod.frontmatter?.description ||
			'No description available',
		icon: mod.icon || mod.frontmatter?.icon,
		component: mod.default,
	});
}

const getFolder = (route: RouteItem) => route.path.split('/')[1] || 'root';

const groupedRoutes = routes.reduce(
	(acc, route) => {
		const folder = getFolder(route);
		acc[folder] ||= [];
		acc[folder].push(route);
		return acc;
	},
	{} as Record<string, RouteItem[]>,
);

for (const folder in groupedRoutes) {
	groupedRoutes[folder].sort((a, b) => a.name.localeCompare(b.name));
}

const experiments: RouteItem[] = groupedRoutes['experiments'] || [];
const elements: RouteItem[] = groupedRoutes['elements'] || [];
---

<Layout>
	<x-grid style='--gap: var(--nm); --cols: 2;'>
		<x-card
			style='background-color: var(--clr-primary__base); outline-color: var(--clr-primary__base); outline-offset: 2px;'>
			<h1>Lilycat</h1>
			<p>
				Powered by dead simple <code>--opinionated</code> CSS props and a mix of
				common convention rules for better DX &amp; while keeping styling minimal.
			</p>
		</x-card>

		<x-card style='outline-offset: 2px;'>
			<h2>Test Page</h2>
			<a href='/test'>Understand each element behaviour better</a>
		</x-card>

		<x-card style='outline-offset: 2px;'>
			<h2>Elements</h2>
			<x-grid style='--gap: var(--md); --cols: 4;'>
				{
					elements.map((el) => (
						<a href={el.path}>
							<span>{el.name}</span>
							<i class='icon'>north_east</i>
						</a>
					))
				}
			</x-grid>
		</x-card>

		<x-card style='outline-offset: 2px;'>
			<h2>Experiments</h2>
			<x-grid style='--gap: var(--md); --cols: 4;'>
				{
					experiments.map((el) => (
						<a href={el.path}>
							<span>{el.name}</span>
							<i class='icon'>north_east</i>
						</a>
					))
				}
			</x-grid>
		</x-card>
	</x-grid>
</Layout>
